
bin\Debug\TIMER_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010e  00800100  000012a4  00001358  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012a4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080020e  0080020e  00001466  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00001466  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000001e0  00000000  00000000  00001469  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000300  00000000  00000000  00001649  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002600  00000000  00000000  00001949  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000141c  00000000  00000000  00003f49  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000167a  00000000  00000000  00005365  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000270  00000000  00000000  000069e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000453  00000000  00000000  00006c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c31  00000000  00000000  000070a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00007cd4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 46 01 	jmp	0x28c	; 0x28c <__vector_1>
       8:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_5>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e4 ea       	ldi	r30, 0xA4	; 164
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	ae 30       	cpi	r26, 0x0E	; 14
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	12 e0       	ldi	r17, 0x02	; 2
      8c:	ae e0       	ldi	r26, 0x0E	; 14
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a5 31       	cpi	r26, 0x15	; 21
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 68 01 	call	0x2d0	; 0x2d0 <main>
      9e:	0c 94 50 09 	jmp	0x12a0	; 0x12a0 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <GPIOplus>:
int t_on = 10;
int dutycycle =50;

void GPIOplus()
{
    dutycycle += 10;
      a6:	80 91 04 01 	lds	r24, 0x0104
      aa:	90 91 05 01 	lds	r25, 0x0105
      ae:	0a 96       	adiw	r24, 0x0a	; 10
      b0:	90 93 05 01 	sts	0x0105, r25
      b4:	80 93 04 01 	sts	0x0104, r24
    if(dutycycle<=100)
      b8:	85 36       	cpi	r24, 0x65	; 101
      ba:	91 05       	cpc	r25, r1
      bc:	8c f0       	brlt	.+34     	; 0xe0 <GPIOplus+0x3a>
        t_on += 2;
        t_off -=2;
    }
    else
    {
        dutycycle = 100;
      be:	84 e6       	ldi	r24, 0x64	; 100
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	90 93 05 01 	sts	0x0105, r25
      c6:	80 93 04 01 	sts	0x0104, r24
        t_on=20;
      ca:	84 e1       	ldi	r24, 0x14	; 20
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	90 93 03 01 	sts	0x0103, r25
      d2:	80 93 02 01 	sts	0x0102, r24
        t_off=0;
      d6:	10 92 01 01 	sts	0x0101, r1
      da:	10 92 00 01 	sts	0x0100, r1
      de:	08 95       	ret
void GPIOplus()
{
    dutycycle += 10;
    if(dutycycle<=100)
    {
        t_on += 2;
      e0:	80 91 02 01 	lds	r24, 0x0102
      e4:	90 91 03 01 	lds	r25, 0x0103
      e8:	02 96       	adiw	r24, 0x02	; 2
      ea:	90 93 03 01 	sts	0x0103, r25
      ee:	80 93 02 01 	sts	0x0102, r24
        t_off -=2;
      f2:	80 91 00 01 	lds	r24, 0x0100
      f6:	90 91 01 01 	lds	r25, 0x0101
      fa:	02 97       	sbiw	r24, 0x02	; 2
      fc:	90 93 01 01 	sts	0x0101, r25
     100:	80 93 00 01 	sts	0x0100, r24
     104:	08 95       	ret

00000106 <GPIOminus>:
    }
}

void GPIOminus()
{
    dutycycle -=10;
     106:	80 91 04 01 	lds	r24, 0x0104
     10a:	90 91 05 01 	lds	r25, 0x0105
     10e:	0a 97       	sbiw	r24, 0x0a	; 10
     110:	90 93 05 01 	sts	0x0105, r25
     114:	80 93 04 01 	sts	0x0104, r24
    if(dutycycle >=0)
     118:	97 fd       	sbrc	r25, 7
     11a:	13 c0       	rjmp	.+38     	; 0x142 <GPIOminus+0x3c>
    {
        t_on-=2;
     11c:	80 91 02 01 	lds	r24, 0x0102
     120:	90 91 03 01 	lds	r25, 0x0103
     124:	02 97       	sbiw	r24, 0x02	; 2
     126:	90 93 03 01 	sts	0x0103, r25
     12a:	80 93 02 01 	sts	0x0102, r24
        t_off+=2;
     12e:	80 91 00 01 	lds	r24, 0x0100
     132:	90 91 01 01 	lds	r25, 0x0101
     136:	02 96       	adiw	r24, 0x02	; 2
     138:	90 93 01 01 	sts	0x0101, r25
     13c:	80 93 00 01 	sts	0x0100, r24
     140:	08 95       	ret
    }
    else
    {
        dutycycle = 0;
     142:	10 92 05 01 	sts	0x0105, r1
     146:	10 92 04 01 	sts	0x0104, r1
        t_on=0;
     14a:	10 92 03 01 	sts	0x0103, r1
     14e:	10 92 02 01 	sts	0x0102, r1
        t_off=20;
     152:	84 e1       	ldi	r24, 0x14	; 20
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	90 93 01 01 	sts	0x0101, r25
     15a:	80 93 00 01 	sts	0x0100, r24
     15e:	08 95       	ret

00000160 <GPIOConfig>:
* Name: GPIOConfig (pin, mode)
* Description: Configures the mode of the pin as INPUT/PULLUP or OUTPUT
* Arguments: pin and mode
* Returns: None
******************************************************************************/
void GPIOConfig(Pin,mode){
     160:	28 2f       	mov	r18, r24

        if(mode==1){
     162:	61 30       	cpi	r22, 0x01	; 1
     164:	71 05       	cpc	r23, r1
     166:	81 f0       	breq	.+32     	; 0x188 <GPIOConfig+0x28>
            SET_BIT(DDRD,Pin);
        }
        else{
            CLR_BIT(DDRD,Pin);
     168:	3a b1       	in	r19, 0x0a	; 10
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	02 c0       	rjmp	.+4      	; 0x174 <GPIOConfig+0x14>
     170:	88 0f       	add	r24, r24
     172:	99 1f       	adc	r25, r25
     174:	2a 95       	dec	r18
     176:	e2 f7       	brpl	.-8      	; 0x170 <GPIOConfig+0x10>
     178:	28 2f       	mov	r18, r24
     17a:	20 95       	com	r18
     17c:	23 23       	and	r18, r19
     17e:	2a b9       	out	0x0a, r18	; 10
            SET_BIT(PORTD,Pin);
     180:	2b b1       	in	r18, 0x0b	; 11
     182:	82 2b       	or	r24, r18
     184:	8b b9       	out	0x0b, r24	; 11
     186:	08 95       	ret
* Returns: None
******************************************************************************/
void GPIOConfig(Pin,mode){

        if(mode==1){
            SET_BIT(DDRD,Pin);
     188:	8a b1       	in	r24, 0x0a	; 10
     18a:	02 c0       	rjmp	.+4      	; 0x190 <GPIOConfig+0x30>
     18c:	66 0f       	add	r22, r22
     18e:	77 1f       	adc	r23, r23
     190:	2a 95       	dec	r18
     192:	e2 f7       	brpl	.-8      	; 0x18c <GPIOConfig+0x2c>
     194:	86 2b       	or	r24, r22
     196:	8a b9       	out	0x0a, r24	; 10
     198:	08 95       	ret

0000019a <GPIOPinRead>:
* Returns: a
******************************************************************************/
int GPIOPinRead(Pin){


            uint8_t PIN_READ=PIND;
     19a:	29 b1       	in	r18, 0x09	; 9
            if(PIN_READ & (1<<Pin)){
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	02 c0       	rjmp	.+4      	; 0x1a4 <GPIOPinRead+0xa>
     1a0:	35 95       	asr	r19
     1a2:	27 95       	ror	r18
     1a4:	8a 95       	dec	r24
     1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <GPIOPinRead+0x6>
     1a8:	20 fd       	sbrc	r18, 0
     1aa:	09 c0       	rjmp	.+18     	; 0x1be <GPIOPinRead+0x24>
                a=1;
            }
            else{
                a=0;
     1ac:	10 92 0f 02 	sts	0x020F, r1
     1b0:	10 92 0e 02 	sts	0x020E, r1
            }
    return a;
};
     1b4:	80 91 0e 02 	lds	r24, 0x020E
     1b8:	90 91 0f 02 	lds	r25, 0x020F
     1bc:	08 95       	ret
int GPIOPinRead(Pin){


            uint8_t PIN_READ=PIND;
            if(PIN_READ & (1<<Pin)){
                a=1;
     1be:	81 e0       	ldi	r24, 0x01	; 1
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	90 93 0f 02 	sts	0x020F, r25
     1c6:	80 93 0e 02 	sts	0x020E, r24
            }
            else{
                a=0;
            }
    return a;
};
     1ca:	80 91 0e 02 	lds	r24, 0x020E
     1ce:	90 91 0f 02 	lds	r25, 0x020F
     1d2:	08 95       	ret

000001d4 <GPIOPinWrite>:
* Name: void GPIOPinWrite(int Pin,int state)
* Description: Writes the state of the pin as HIGH or LOW
* Arguments: pin and state
* Returns: None
******************************************************************************/
void GPIOPinWrite(Pin,state){
     1d4:	38 2f       	mov	r19, r24
        if(state==0){
     1d6:	67 2b       	or	r22, r23
     1d8:	59 f0       	breq	.+22     	; 0x1f0 <GPIOPinWrite+0x1c>
            CLR_BIT(PORTD,Pin);
        }
        else{
            SET_BIT(PORTD,Pin);
     1da:	2b b1       	in	r18, 0x0b	; 11
     1dc:	81 e0       	ldi	r24, 0x01	; 1
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <GPIOPinWrite+0x12>
     1e2:	88 0f       	add	r24, r24
     1e4:	99 1f       	adc	r25, r25
     1e6:	3a 95       	dec	r19
     1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <GPIOPinWrite+0xe>
     1ea:	28 2b       	or	r18, r24
     1ec:	2b b9       	out	0x0b, r18	; 11
     1ee:	08 95       	ret
* Arguments: pin and state
* Returns: None
******************************************************************************/
void GPIOPinWrite(Pin,state){
        if(state==0){
            CLR_BIT(PORTD,Pin);
     1f0:	2b b1       	in	r18, 0x0b	; 11
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	02 c0       	rjmp	.+4      	; 0x1fc <GPIOPinWrite+0x28>
     1f8:	88 0f       	add	r24, r24
     1fa:	99 1f       	adc	r25, r25
     1fc:	3a 95       	dec	r19
     1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <GPIOPinWrite+0x24>
     200:	80 95       	com	r24
     202:	82 23       	and	r24, r18
     204:	8b b9       	out	0x0b, r24	; 11
     206:	08 95       	ret

00000208 <__vector_16>:
            _delay_ms(t_off);
        }
    }
}

ISR(TIMER0_OVF_vect) {
     208:	1f 92       	push	r1
     20a:	0f 92       	push	r0
     20c:	0f b6       	in	r0, 0x3f	; 63
     20e:	0f 92       	push	r0
     210:	11 24       	eor	r1, r1
     212:	8f 93       	push	r24
     214:	9f 93       	push	r25

  counter++;
     216:	80 91 13 02 	lds	r24, 0x0213
     21a:	90 91 14 02 	lds	r25, 0x0214
     21e:	01 96       	adiw	r24, 0x01	; 1
     220:	90 93 14 02 	sts	0x0214, r25
     224:	80 93 13 02 	sts	0x0213, r24

  if (counter >= 61) {
     228:	80 91 13 02 	lds	r24, 0x0213
     22c:	90 91 14 02 	lds	r25, 0x0214
     230:	cd 97       	sbiw	r24, 0x3d	; 61
     232:	48 f0       	brcs	.+18     	; 0x246 <__vector_16+0x3e>
    FLAG_BIT.FLAG_TIMER0 = 1;
     234:	80 91 12 02 	lds	r24, 0x0212
     238:	81 60       	ori	r24, 0x01	; 1
     23a:	80 93 12 02 	sts	0x0212, r24
    counter = 0;
     23e:	10 92 14 02 	sts	0x0214, r1
     242:	10 92 13 02 	sts	0x0213, r1
  }
}
     246:	9f 91       	pop	r25
     248:	8f 91       	pop	r24
     24a:	0f 90       	pop	r0
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	0f 90       	pop	r0
     250:	1f 90       	pop	r1
     252:	18 95       	reti

00000254 <__vector_5>:
ISR(PCINT2_vect)
{
     254:	1f 92       	push	r1
     256:	0f 92       	push	r0
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	0f 92       	push	r0
     25c:	11 24       	eor	r1, r1
     25e:	8f 93       	push	r24
     260:	9f 93       	push	r25
    mode_counter++;
     262:	80 91 10 02 	lds	r24, 0x0210
     266:	90 91 11 02 	lds	r25, 0x0211
     26a:	01 96       	adiw	r24, 0x01	; 1
     26c:	90 93 11 02 	sts	0x0211, r25
     270:	80 93 10 02 	sts	0x0210, r24
    FLAG_BIT.MODE_FLAG = 1;
     274:	80 91 12 02 	lds	r24, 0x0212
     278:	82 60       	ori	r24, 0x02	; 2
     27a:	80 93 12 02 	sts	0x0212, r24
}
     27e:	9f 91       	pop	r25
     280:	8f 91       	pop	r24
     282:	0f 90       	pop	r0
     284:	0f be       	out	0x3f, r0	; 63
     286:	0f 90       	pop	r0
     288:	1f 90       	pop	r1
     28a:	18 95       	reti

0000028c <__vector_1>:
ISR(INT0_vect)
{
     28c:	1f 92       	push	r1
     28e:	0f 92       	push	r0
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	0f 92       	push	r0
     294:	11 24       	eor	r1, r1
     296:	8f 93       	push	r24
    FLAG_BIT.APP_FLAG_INT0 = 1;
     298:	80 91 12 02 	lds	r24, 0x0212
     29c:	84 60       	ori	r24, 0x04	; 4
     29e:	80 93 12 02 	sts	0x0212, r24
}
     2a2:	8f 91       	pop	r24
     2a4:	0f 90       	pop	r0
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	0f 90       	pop	r0
     2aa:	1f 90       	pop	r1
     2ac:	18 95       	reti

000002ae <__vector_2>:
ISR(INT1_vect)
{
     2ae:	1f 92       	push	r1
     2b0:	0f 92       	push	r0
     2b2:	0f b6       	in	r0, 0x3f	; 63
     2b4:	0f 92       	push	r0
     2b6:	11 24       	eor	r1, r1
     2b8:	8f 93       	push	r24
    FLAG_BIT.APP_FLAG_INT1 = 1;
     2ba:	80 91 12 02 	lds	r24, 0x0212
     2be:	88 60       	ori	r24, 0x08	; 8
     2c0:	80 93 12 02 	sts	0x0212, r24
}
     2c4:	8f 91       	pop	r24
     2c6:	0f 90       	pop	r0
     2c8:	0f be       	out	0x3f, r0	; 63
     2ca:	0f 90       	pop	r0
     2cc:	1f 90       	pop	r1
     2ce:	18 95       	reti

000002d0 <main>:
#include "main.h"
volatile uint16_t counter,mode_counter;

int main()
{
     2d0:	9f 92       	push	r9
     2d2:	af 92       	push	r10
     2d4:	bf 92       	push	r11
     2d6:	cf 92       	push	r12
     2d8:	df 92       	push	r13
     2da:	ef 92       	push	r14
     2dc:	ff 92       	push	r15
     2de:	0f 93       	push	r16
     2e0:	1f 93       	push	r17
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
    GPIOConfig(PD1,INPUT); //MODE SWITCH PCINT17
     2e6:	81 e0       	ldi	r24, 0x01	; 1
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	60 e0       	ldi	r22, 0x00	; 0
     2ec:	70 e0       	ldi	r23, 0x00	; 0
     2ee:	0e 94 b0 00 	call	0x160	; 0x160 <GPIOConfig>
    GPIOConfig(PD2,INPUT); //GPIO PLUS INT0
     2f2:	82 e0       	ldi	r24, 0x02	; 2
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	60 e0       	ldi	r22, 0x00	; 0
     2f8:	70 e0       	ldi	r23, 0x00	; 0
     2fa:	0e 94 b0 00 	call	0x160	; 0x160 <GPIOConfig>
    GPIOConfig(PD3,INPUT); //GPIO MINU INT1
     2fe:	83 e0       	ldi	r24, 0x03	; 3
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	60 e0       	ldi	r22, 0x00	; 0
     304:	70 e0       	ldi	r23, 0x00	; 0
     306:	0e 94 b0 00 	call	0x160	; 0x160 <GPIOConfig>
    GPIOConfig(PD6,OUTPUT); //OUTPUT
     30a:	86 e0       	ldi	r24, 0x06	; 6
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	61 e0       	ldi	r22, 0x01	; 1
     310:	70 e0       	ldi	r23, 0x00	; 0
     312:	0e 94 b0 00 	call	0x160	; 0x160 <GPIOConfig>
    //FOR PCINT17
    PCICR |= (1<<PCIE2);
     316:	80 91 68 00 	lds	r24, 0x0068
     31a:	84 60       	ori	r24, 0x04	; 4
     31c:	80 93 68 00 	sts	0x0068, r24
    PCMSK2|= (1<<PCINT17);
     320:	80 91 6d 00 	lds	r24, 0x006D
     324:	82 60       	ori	r24, 0x02	; 2
     326:	80 93 6d 00 	sts	0x006D, r24
    sei();
     32a:	78 94       	sei
    //FOR PD2
    EICRA &=~(1<<ISC01);
     32c:	80 91 69 00 	lds	r24, 0x0069
     330:	8d 7f       	andi	r24, 0xFD	; 253
     332:	80 93 69 00 	sts	0x0069, r24
    EICRA |= (1<<ISC00);
     336:	80 91 69 00 	lds	r24, 0x0069
     33a:	81 60       	ori	r24, 0x01	; 1
     33c:	80 93 69 00 	sts	0x0069, r24
    EIMSK |= (1<<INT0);
     340:	e8 9a       	sbi	0x1d, 0	; 29
    sei();
     342:	78 94       	sei
    //FOR PD3
    EICRA &=~(1<<ISC11);
     344:	80 91 69 00 	lds	r24, 0x0069
     348:	87 7f       	andi	r24, 0xF7	; 247
     34a:	80 93 69 00 	sts	0x0069, r24
    EICRA |= (1<<ISC10);
     34e:	80 91 69 00 	lds	r24, 0x0069
     352:	84 60       	ori	r24, 0x04	; 4
     354:	80 93 69 00 	sts	0x0069, r24
    EIMSK |= (1<<INT1);
     358:	e9 9a       	sbi	0x1d, 1	; 29
    sei();
     35a:	78 94       	sei

    //FOR TIMER0
    TCCR0A = 0x00;
     35c:	14 bc       	out	0x24, r1	; 36
    TCNT0 = 0x00;
     35e:	16 bc       	out	0x26, r1	; 38
    TCCR0B |= ((1 << CS00) | (1 << CS02));
     360:	85 b5       	in	r24, 0x25	; 37
     362:	85 60       	ori	r24, 0x05	; 5
     364:	85 bd       	out	0x25, r24	; 37
    TCCR0B &= ~(1 << CS01);
     366:	85 b5       	in	r24, 0x25	; 37
     368:	8d 7f       	andi	r24, 0xFD	; 253
     36a:	85 bd       	out	0x25, r24	; 37
    TIMSK0 |= (1 << TOIE0);
     36c:	80 91 6e 00 	lds	r24, 0x006E
     370:	81 60       	ori	r24, 0x01	; 1
     372:	80 93 6e 00 	sts	0x006E, r24
    sei();
     376:	78 94       	sei
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     378:	c0 e9       	ldi	r28, 0x90	; 144
     37a:	d1 e0       	ldi	r29, 0x01	; 1
        {
            if(mode_counter==0)
            {
                if(FLAG_BIT.FLAG_TIMER0 == 1)
                {
                    PORTD ^= (1<<PD6);
     37c:	80 e4       	ldi	r24, 0x40	; 64
     37e:	98 2e       	mov	r9, r24

    while(1)
    {
        uint8_t P_R = 0x00;
        P_R = PIND;
        if(P_R & (1<<PD1))
     380:	49 9b       	sbis	0x09, 1	; 9
     382:	15 c0       	rjmp	.+42     	; 0x3ae <main+0xde>
        {
            if(mode_counter==0)
     384:	80 91 10 02 	lds	r24, 0x0210
     388:	90 91 11 02 	lds	r25, 0x0211
     38c:	89 2b       	or	r24, r25
     38e:	09 f0       	breq	.+2      	; 0x392 <main+0xc2>
     390:	b9 c0       	rjmp	.+370    	; 0x504 <main+0x234>
            {
                if(FLAG_BIT.FLAG_TIMER0 == 1)
     392:	80 91 12 02 	lds	r24, 0x0212
     396:	80 ff       	sbrs	r24, 0
     398:	f3 cf       	rjmp	.-26     	; 0x380 <main+0xb0>
                {
                    PORTD ^= (1<<PD6);
     39a:	8b b1       	in	r24, 0x0b	; 11
     39c:	89 25       	eor	r24, r9
     39e:	8b b9       	out	0x0b, r24	; 11
                    FLAG_BIT.FLAG_TIMER0 = 0;
     3a0:	80 91 12 02 	lds	r24, 0x0212
     3a4:	8e 7f       	andi	r24, 0xFE	; 254
     3a6:	80 93 12 02 	sts	0x0212, r24

    while(1)
    {
        uint8_t P_R = 0x00;
        P_R = PIND;
        if(P_R & (1<<PD1))
     3aa:	49 99       	sbic	0x09, 1	; 9
     3ac:	eb cf       	rjmp	.-42     	; 0x384 <main+0xb4>
            _delay_ms(t_off);
            }
        }
        else
        {
             if(FLAG_BIT.APP_FLAG_INT0 == 1)
     3ae:	80 91 12 02 	lds	r24, 0x0212
     3b2:	82 fd       	sbrc	r24, 2
     3b4:	9f c0       	rjmp	.+318    	; 0x4f4 <main+0x224>
             {
                 GPIOplus();
                 FLAG_BIT.APP_FLAG_INT0 = 0;
             }
             if(FLAG_BIT.APP_FLAG_INT1 == 1)
     3b6:	80 91 12 02 	lds	r24, 0x0212
     3ba:	83 fd       	sbrc	r24, 3
     3bc:	93 c0       	rjmp	.+294    	; 0x4e4 <main+0x214>
                 GPIOminus();
                 FLAG_BIT.APP_FLAG_INT1 = 0;


             }
            GPIOPinWrite(PD6,HIGH);
     3be:	86 e0       	ldi	r24, 0x06	; 6
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	61 e0       	ldi	r22, 0x01	; 1
     3c4:	70 e0       	ldi	r23, 0x00	; 0
     3c6:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <GPIOPinWrite>
            _delay_ms(t_on);
     3ca:	60 91 02 01 	lds	r22, 0x0102
     3ce:	70 91 03 01 	lds	r23, 0x0103
     3d2:	88 27       	eor	r24, r24
     3d4:	77 fd       	sbrc	r23, 7
     3d6:	80 95       	com	r24
     3d8:	98 2f       	mov	r25, r24
     3da:	0e 94 72 06 	call	0xce4	; 0xce4 <__floatsisf>
     3de:	5b 01       	movw	r10, r22
     3e0:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3e2:	20 e0       	ldi	r18, 0x00	; 0
     3e4:	30 e0       	ldi	r19, 0x00	; 0
     3e6:	4a e7       	ldi	r20, 0x7A	; 122
     3e8:	55 e4       	ldi	r21, 0x45	; 69
     3ea:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     3ee:	7b 01       	movw	r14, r22
     3f0:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	40 e8       	ldi	r20, 0x80	; 128
     3f8:	5f e3       	ldi	r21, 0x3F	; 63
     3fa:	0e 94 42 06 	call	0xc84	; 0xc84 <__ltsf2>
     3fe:	88 23       	and	r24, r24
     400:	0c f4       	brge	.+2      	; 0x404 <main+0x134>
     402:	02 c1       	rjmp	.+516    	; 0x608 <main+0x338>
		__ticks = 1;
	else if (__tmp > 65535)
     404:	c8 01       	movw	r24, r16
     406:	b7 01       	movw	r22, r14
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	3f ef       	ldi	r19, 0xFF	; 255
     40c:	4f e7       	ldi	r20, 0x7F	; 127
     40e:	57 e4       	ldi	r21, 0x47	; 71
     410:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__gtsf2>
     414:	18 16       	cp	r1, r24
     416:	0c f0       	brlt	.+2      	; 0x41a <main+0x14a>
     418:	5d c0       	rjmp	.+186    	; 0x4d4 <main+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     41a:	c6 01       	movw	r24, r12
     41c:	b5 01       	movw	r22, r10
     41e:	20 e0       	ldi	r18, 0x00	; 0
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	40 e2       	ldi	r20, 0x20	; 32
     424:	51 e4       	ldi	r21, 0x41	; 65
     426:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     42a:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     42e:	cb 01       	movw	r24, r22
		while(__ticks)
     430:	67 2b       	or	r22, r23
     432:	29 f0       	breq	.+10     	; 0x43e <main+0x16e>
     434:	fe 01       	movw	r30, r28
     436:	31 97       	sbiw	r30, 0x01	; 1
     438:	f1 f7       	brne	.-4      	; 0x436 <main+0x166>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     43a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     43c:	d9 f7       	brne	.-10     	; 0x434 <main+0x164>
            GPIOPinWrite(PD6,LOW);
     43e:	86 e0       	ldi	r24, 0x06	; 6
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	60 e0       	ldi	r22, 0x00	; 0
     444:	70 e0       	ldi	r23, 0x00	; 0
     446:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <GPIOPinWrite>
            _delay_ms(t_off);
     44a:	60 91 00 01 	lds	r22, 0x0100
     44e:	70 91 01 01 	lds	r23, 0x0101
     452:	88 27       	eor	r24, r24
     454:	77 fd       	sbrc	r23, 7
     456:	80 95       	com	r24
     458:	98 2f       	mov	r25, r24
     45a:	0e 94 72 06 	call	0xce4	; 0xce4 <__floatsisf>
     45e:	5b 01       	movw	r10, r22
     460:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	4a e7       	ldi	r20, 0x7A	; 122
     468:	55 e4       	ldi	r21, 0x45	; 69
     46a:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     46e:	7b 01       	movw	r14, r22
     470:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	40 e8       	ldi	r20, 0x80	; 128
     478:	5f e3       	ldi	r21, 0x3F	; 63
     47a:	0e 94 42 06 	call	0xc84	; 0xc84 <__ltsf2>
     47e:	88 23       	and	r24, r24
     480:	34 f1       	brlt	.+76     	; 0x4ce <main+0x1fe>
		__ticks = 1;
	else if (__tmp > 65535)
     482:	c8 01       	movw	r24, r16
     484:	b7 01       	movw	r22, r14
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	3f ef       	ldi	r19, 0xFF	; 255
     48a:	4f e7       	ldi	r20, 0x7F	; 127
     48c:	57 e4       	ldi	r21, 0x47	; 71
     48e:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__gtsf2>
     492:	18 16       	cp	r1, r24
     494:	a4 f4       	brge	.+40     	; 0x4be <main+0x1ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     496:	c6 01       	movw	r24, r12
     498:	b5 01       	movw	r22, r10
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	40 e2       	ldi	r20, 0x20	; 32
     4a0:	51 e4       	ldi	r21, 0x41	; 65
     4a2:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     4a6:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     4aa:	cb 01       	movw	r24, r22
		while(__ticks)
     4ac:	67 2b       	or	r22, r23
     4ae:	09 f4       	brne	.+2      	; 0x4b2 <main+0x1e2>
     4b0:	67 cf       	rjmp	.-306    	; 0x380 <main+0xb0>
     4b2:	fe 01       	movw	r30, r28
     4b4:	31 97       	sbiw	r30, 0x01	; 1
     4b6:	f1 f7       	brne	.-4      	; 0x4b4 <main+0x1e4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4b8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4ba:	d9 f7       	brne	.-10     	; 0x4b2 <main+0x1e2>
     4bc:	61 cf       	rjmp	.-318    	; 0x380 <main+0xb0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4be:	c8 01       	movw	r24, r16
     4c0:	b7 01       	movw	r22, r14
     4c2:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     4c6:	cb 01       	movw	r24, r22
     4c8:	01 97       	sbiw	r24, 0x01	; 1
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <main+0x1f8>
     4cc:	59 cf       	rjmp	.-334    	; 0x380 <main+0xb0>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     4ce:	61 e0       	ldi	r22, 0x01	; 1
     4d0:	70 e0       	ldi	r23, 0x00	; 0
     4d2:	f9 cf       	rjmp	.-14     	; 0x4c6 <main+0x1f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4d4:	c8 01       	movw	r24, r16
     4d6:	b7 01       	movw	r22, r14
     4d8:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     4dc:	cb 01       	movw	r24, r22
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <main+0x20e>
     4e2:	ad cf       	rjmp	.-166    	; 0x43e <main+0x16e>
                 GPIOplus();
                 FLAG_BIT.APP_FLAG_INT0 = 0;
             }
             if(FLAG_BIT.APP_FLAG_INT1 == 1)
             {
                 GPIOminus();
     4e4:	0e 94 83 00 	call	0x106	; 0x106 <GPIOminus>
                 FLAG_BIT.APP_FLAG_INT1 = 0;
     4e8:	80 91 12 02 	lds	r24, 0x0212
     4ec:	87 7f       	andi	r24, 0xF7	; 247
     4ee:	80 93 12 02 	sts	0x0212, r24
     4f2:	65 cf       	rjmp	.-310    	; 0x3be <main+0xee>
        }
        else
        {
             if(FLAG_BIT.APP_FLAG_INT0 == 1)
             {
                 GPIOplus();
     4f4:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIOplus>
                 FLAG_BIT.APP_FLAG_INT0 = 0;
     4f8:	80 91 12 02 	lds	r24, 0x0212
     4fc:	8b 7f       	andi	r24, 0xFB	; 251
     4fe:	80 93 12 02 	sts	0x0212, r24
     502:	59 cf       	rjmp	.-334    	; 0x3b6 <main+0xe6>
                    FLAG_BIT.FLAG_TIMER0 = 0;
                }
            }
            else
            {
            GPIOPinWrite(PD6,HIGH);
     504:	86 e0       	ldi	r24, 0x06	; 6
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	61 e0       	ldi	r22, 0x01	; 1
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <GPIOPinWrite>
            _delay_ms(t_on);
     510:	60 91 02 01 	lds	r22, 0x0102
     514:	70 91 03 01 	lds	r23, 0x0103
     518:	88 27       	eor	r24, r24
     51a:	77 fd       	sbrc	r23, 7
     51c:	80 95       	com	r24
     51e:	98 2f       	mov	r25, r24
     520:	0e 94 72 06 	call	0xce4	; 0xce4 <__floatsisf>
     524:	5b 01       	movw	r10, r22
     526:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     528:	20 e0       	ldi	r18, 0x00	; 0
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	4a e7       	ldi	r20, 0x7A	; 122
     52e:	55 e4       	ldi	r21, 0x45	; 69
     530:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     534:	7b 01       	movw	r14, r22
     536:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	40 e8       	ldi	r20, 0x80	; 128
     53e:	5f e3       	ldi	r21, 0x3F	; 63
     540:	0e 94 42 06 	call	0xc84	; 0xc84 <__ltsf2>
     544:	88 23       	and	r24, r24
     546:	0c f4       	brge	.+2      	; 0x54a <main+0x27a>
     548:	6a c0       	rjmp	.+212    	; 0x61e <main+0x34e>
		__ticks = 1;
	else if (__tmp > 65535)
     54a:	c8 01       	movw	r24, r16
     54c:	b7 01       	movw	r22, r14
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	3f ef       	ldi	r19, 0xFF	; 255
     552:	4f e7       	ldi	r20, 0x7F	; 127
     554:	57 e4       	ldi	r21, 0x47	; 71
     556:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__gtsf2>
     55a:	18 16       	cp	r1, r24
     55c:	0c f0       	brlt	.+2      	; 0x560 <main+0x290>
     55e:	57 c0       	rjmp	.+174    	; 0x60e <main+0x33e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     560:	c6 01       	movw	r24, r12
     562:	b5 01       	movw	r22, r10
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	40 e2       	ldi	r20, 0x20	; 32
     56a:	51 e4       	ldi	r21, 0x41	; 65
     56c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     570:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     574:	cb 01       	movw	r24, r22
		while(__ticks)
     576:	67 2b       	or	r22, r23
     578:	29 f0       	breq	.+10     	; 0x584 <main+0x2b4>
     57a:	fe 01       	movw	r30, r28
     57c:	31 97       	sbiw	r30, 0x01	; 1
     57e:	f1 f7       	brne	.-4      	; 0x57c <main+0x2ac>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     580:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     582:	d9 f7       	brne	.-10     	; 0x57a <main+0x2aa>
            GPIOPinWrite(PD6,LOW);
     584:	86 e0       	ldi	r24, 0x06	; 6
     586:	90 e0       	ldi	r25, 0x00	; 0
     588:	60 e0       	ldi	r22, 0x00	; 0
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <GPIOPinWrite>
            _delay_ms(t_off);
     590:	60 91 00 01 	lds	r22, 0x0100
     594:	70 91 01 01 	lds	r23, 0x0101
     598:	88 27       	eor	r24, r24
     59a:	77 fd       	sbrc	r23, 7
     59c:	80 95       	com	r24
     59e:	98 2f       	mov	r25, r24
     5a0:	0e 94 72 06 	call	0xce4	; 0xce4 <__floatsisf>
     5a4:	5b 01       	movw	r10, r22
     5a6:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	4a e7       	ldi	r20, 0x7A	; 122
     5ae:	55 e4       	ldi	r21, 0x45	; 69
     5b0:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     5b4:	7b 01       	movw	r14, r22
     5b6:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e8       	ldi	r20, 0x80	; 128
     5be:	5f e3       	ldi	r21, 0x3F	; 63
     5c0:	0e 94 42 06 	call	0xc84	; 0xc84 <__ltsf2>
     5c4:	88 23       	and	r24, r24
     5c6:	0c f4       	brge	.+2      	; 0x5ca <main+0x2fa>
     5c8:	82 cf       	rjmp	.-252    	; 0x4ce <main+0x1fe>
		__ticks = 1;
	else if (__tmp > 65535)
     5ca:	c8 01       	movw	r24, r16
     5cc:	b7 01       	movw	r22, r14
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	3f ef       	ldi	r19, 0xFF	; 255
     5d2:	4f e7       	ldi	r20, 0x7F	; 127
     5d4:	57 e4       	ldi	r21, 0x47	; 71
     5d6:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__gtsf2>
     5da:	18 16       	cp	r1, r24
     5dc:	0c f0       	brlt	.+2      	; 0x5e0 <main+0x310>
     5de:	6f cf       	rjmp	.-290    	; 0x4be <main+0x1ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5e0:	c6 01       	movw	r24, r12
     5e2:	b5 01       	movw	r22, r10
     5e4:	20 e0       	ldi	r18, 0x00	; 0
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e2       	ldi	r20, 0x20	; 32
     5ea:	51 e4       	ldi	r21, 0x41	; 65
     5ec:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <__mulsf3>
     5f0:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     5f4:	cb 01       	movw	r24, r22
		while(__ticks)
     5f6:	67 2b       	or	r22, r23
     5f8:	09 f4       	brne	.+2      	; 0x5fc <main+0x32c>
     5fa:	c2 ce       	rjmp	.-636    	; 0x380 <main+0xb0>
     5fc:	fe 01       	movw	r30, r28
     5fe:	31 97       	sbiw	r30, 0x01	; 1
     600:	f1 f7       	brne	.-4      	; 0x5fe <main+0x32e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     602:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     604:	d9 f7       	brne	.-10     	; 0x5fc <main+0x32c>
     606:	bc ce       	rjmp	.-648    	; 0x380 <main+0xb0>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     608:	61 e0       	ldi	r22, 0x01	; 1
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	67 cf       	rjmp	.-306    	; 0x4dc <main+0x20c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     60e:	c8 01       	movw	r24, r16
     610:	b7 01       	movw	r22, r14
     612:	0e 94 12 03 	call	0x624	; 0x624 <__fixunssfsi>
     616:	cb 01       	movw	r24, r22
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	f1 f7       	brne	.-4      	; 0x618 <main+0x348>
     61c:	b3 cf       	rjmp	.-154    	; 0x584 <main+0x2b4>
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
     61e:	61 e0       	ldi	r22, 0x01	; 1
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	f9 cf       	rjmp	.-14     	; 0x616 <main+0x346>

00000624 <__fixunssfsi>:
     624:	ef 92       	push	r14
     626:	ff 92       	push	r15
     628:	0f 93       	push	r16
     62a:	1f 93       	push	r17
     62c:	7b 01       	movw	r14, r22
     62e:	8c 01       	movw	r16, r24
     630:	20 e0       	ldi	r18, 0x00	; 0
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	40 e0       	ldi	r20, 0x00	; 0
     636:	5f e4       	ldi	r21, 0x4F	; 79
     638:	0e 94 12 06 	call	0xc24	; 0xc24 <__gesf2>
     63c:	88 23       	and	r24, r24
     63e:	8c f0       	brlt	.+34     	; 0x662 <__fixunssfsi+0x3e>
     640:	c8 01       	movw	r24, r16
     642:	b7 01       	movw	r22, r14
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	40 e0       	ldi	r20, 0x00	; 0
     64a:	5f e4       	ldi	r21, 0x4F	; 79
     64c:	0e 94 8a 04 	call	0x914	; 0x914 <__subsf3>
     650:	0e 94 d0 06 	call	0xda0	; 0xda0 <__fixsfsi>
     654:	9b 01       	movw	r18, r22
     656:	ac 01       	movw	r20, r24
     658:	20 50       	subi	r18, 0x00	; 0
     65a:	30 40       	sbci	r19, 0x00	; 0
     65c:	40 40       	sbci	r20, 0x00	; 0
     65e:	50 48       	sbci	r21, 0x80	; 128
     660:	06 c0       	rjmp	.+12     	; 0x66e <__fixunssfsi+0x4a>
     662:	c8 01       	movw	r24, r16
     664:	b7 01       	movw	r22, r14
     666:	0e 94 d0 06 	call	0xda0	; 0xda0 <__fixsfsi>
     66a:	9b 01       	movw	r18, r22
     66c:	ac 01       	movw	r20, r24
     66e:	b9 01       	movw	r22, r18
     670:	ca 01       	movw	r24, r20
     672:	1f 91       	pop	r17
     674:	0f 91       	pop	r16
     676:	ff 90       	pop	r15
     678:	ef 90       	pop	r14
     67a:	08 95       	ret

0000067c <_fpadd_parts>:
     67c:	a0 e0       	ldi	r26, 0x00	; 0
     67e:	b0 e0       	ldi	r27, 0x00	; 0
     680:	e4 e4       	ldi	r30, 0x44	; 68
     682:	f3 e0       	ldi	r31, 0x03	; 3
     684:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__prologue_saves__>
     688:	dc 01       	movw	r26, r24
     68a:	2b 01       	movw	r4, r22
     68c:	fa 01       	movw	r30, r20
     68e:	9c 91       	ld	r25, X
     690:	92 30       	cpi	r25, 0x02	; 2
     692:	08 f4       	brcc	.+2      	; 0x696 <_fpadd_parts+0x1a>
     694:	39 c1       	rjmp	.+626    	; 0x908 <__stack+0x9>
     696:	eb 01       	movw	r28, r22
     698:	88 81       	ld	r24, Y
     69a:	82 30       	cpi	r24, 0x02	; 2
     69c:	08 f4       	brcc	.+2      	; 0x6a0 <_fpadd_parts+0x24>
     69e:	33 c1       	rjmp	.+614    	; 0x906 <__stack+0x7>
     6a0:	94 30       	cpi	r25, 0x04	; 4
     6a2:	69 f4       	brne	.+26     	; 0x6be <_fpadd_parts+0x42>
     6a4:	84 30       	cpi	r24, 0x04	; 4
     6a6:	09 f0       	breq	.+2      	; 0x6aa <_fpadd_parts+0x2e>
     6a8:	2f c1       	rjmp	.+606    	; 0x908 <__stack+0x9>
     6aa:	11 96       	adiw	r26, 0x01	; 1
     6ac:	9c 91       	ld	r25, X
     6ae:	11 97       	sbiw	r26, 0x01	; 1
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	98 17       	cp	r25, r24
     6b4:	09 f4       	brne	.+2      	; 0x6b8 <_fpadd_parts+0x3c>
     6b6:	28 c1       	rjmp	.+592    	; 0x908 <__stack+0x9>
     6b8:	a6 e0       	ldi	r26, 0x06	; 6
     6ba:	b1 e0       	ldi	r27, 0x01	; 1
     6bc:	25 c1       	rjmp	.+586    	; 0x908 <__stack+0x9>
     6be:	84 30       	cpi	r24, 0x04	; 4
     6c0:	09 f4       	brne	.+2      	; 0x6c4 <_fpadd_parts+0x48>
     6c2:	21 c1       	rjmp	.+578    	; 0x906 <__stack+0x7>
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	a9 f4       	brne	.+42     	; 0x6f2 <_fpadd_parts+0x76>
     6c8:	92 30       	cpi	r25, 0x02	; 2
     6ca:	09 f0       	breq	.+2      	; 0x6ce <_fpadd_parts+0x52>
     6cc:	1d c1       	rjmp	.+570    	; 0x908 <__stack+0x9>
     6ce:	9a 01       	movw	r18, r20
     6d0:	ad 01       	movw	r20, r26
     6d2:	88 e0       	ldi	r24, 0x08	; 8
     6d4:	ea 01       	movw	r28, r20
     6d6:	09 90       	ld	r0, Y+
     6d8:	ae 01       	movw	r20, r28
     6da:	e9 01       	movw	r28, r18
     6dc:	09 92       	st	Y+, r0
     6de:	9e 01       	movw	r18, r28
     6e0:	81 50       	subi	r24, 0x01	; 1
     6e2:	c1 f7       	brne	.-16     	; 0x6d4 <_fpadd_parts+0x58>
     6e4:	e2 01       	movw	r28, r4
     6e6:	89 81       	ldd	r24, Y+1	; 0x01
     6e8:	11 96       	adiw	r26, 0x01	; 1
     6ea:	9c 91       	ld	r25, X
     6ec:	89 23       	and	r24, r25
     6ee:	81 83       	std	Z+1, r24	; 0x01
     6f0:	08 c1       	rjmp	.+528    	; 0x902 <__stack+0x3>
     6f2:	92 30       	cpi	r25, 0x02	; 2
     6f4:	09 f4       	brne	.+2      	; 0x6f8 <_fpadd_parts+0x7c>
     6f6:	07 c1       	rjmp	.+526    	; 0x906 <__stack+0x7>
     6f8:	12 96       	adiw	r26, 0x02	; 2
     6fa:	2d 90       	ld	r2, X+
     6fc:	3c 90       	ld	r3, X
     6fe:	13 97       	sbiw	r26, 0x03	; 3
     700:	eb 01       	movw	r28, r22
     702:	8a 81       	ldd	r24, Y+2	; 0x02
     704:	9b 81       	ldd	r25, Y+3	; 0x03
     706:	14 96       	adiw	r26, 0x04	; 4
     708:	ad 90       	ld	r10, X+
     70a:	bd 90       	ld	r11, X+
     70c:	cd 90       	ld	r12, X+
     70e:	dc 90       	ld	r13, X
     710:	17 97       	sbiw	r26, 0x07	; 7
     712:	ec 80       	ldd	r14, Y+4	; 0x04
     714:	fd 80       	ldd	r15, Y+5	; 0x05
     716:	0e 81       	ldd	r16, Y+6	; 0x06
     718:	1f 81       	ldd	r17, Y+7	; 0x07
     71a:	91 01       	movw	r18, r2
     71c:	28 1b       	sub	r18, r24
     71e:	39 0b       	sbc	r19, r25
     720:	b9 01       	movw	r22, r18
     722:	37 ff       	sbrs	r19, 7
     724:	04 c0       	rjmp	.+8      	; 0x72e <_fpadd_parts+0xb2>
     726:	66 27       	eor	r22, r22
     728:	77 27       	eor	r23, r23
     72a:	62 1b       	sub	r22, r18
     72c:	73 0b       	sbc	r23, r19
     72e:	60 32       	cpi	r22, 0x20	; 32
     730:	71 05       	cpc	r23, r1
     732:	0c f0       	brlt	.+2      	; 0x736 <_fpadd_parts+0xba>
     734:	61 c0       	rjmp	.+194    	; 0x7f8 <_fpadd_parts+0x17c>
     736:	12 16       	cp	r1, r18
     738:	13 06       	cpc	r1, r19
     73a:	6c f5       	brge	.+90     	; 0x796 <_fpadd_parts+0x11a>
     73c:	37 01       	movw	r6, r14
     73e:	48 01       	movw	r8, r16
     740:	06 2e       	mov	r0, r22
     742:	04 c0       	rjmp	.+8      	; 0x74c <_fpadd_parts+0xd0>
     744:	96 94       	lsr	r9
     746:	87 94       	ror	r8
     748:	77 94       	ror	r7
     74a:	67 94       	ror	r6
     74c:	0a 94       	dec	r0
     74e:	d2 f7       	brpl	.-12     	; 0x744 <_fpadd_parts+0xc8>
     750:	21 e0       	ldi	r18, 0x01	; 1
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	40 e0       	ldi	r20, 0x00	; 0
     756:	50 e0       	ldi	r21, 0x00	; 0
     758:	04 c0       	rjmp	.+8      	; 0x762 <_fpadd_parts+0xe6>
     75a:	22 0f       	add	r18, r18
     75c:	33 1f       	adc	r19, r19
     75e:	44 1f       	adc	r20, r20
     760:	55 1f       	adc	r21, r21
     762:	6a 95       	dec	r22
     764:	d2 f7       	brpl	.-12     	; 0x75a <_fpadd_parts+0xde>
     766:	21 50       	subi	r18, 0x01	; 1
     768:	30 40       	sbci	r19, 0x00	; 0
     76a:	40 40       	sbci	r20, 0x00	; 0
     76c:	50 40       	sbci	r21, 0x00	; 0
     76e:	2e 21       	and	r18, r14
     770:	3f 21       	and	r19, r15
     772:	40 23       	and	r20, r16
     774:	51 23       	and	r21, r17
     776:	21 15       	cp	r18, r1
     778:	31 05       	cpc	r19, r1
     77a:	41 05       	cpc	r20, r1
     77c:	51 05       	cpc	r21, r1
     77e:	21 f0       	breq	.+8      	; 0x788 <_fpadd_parts+0x10c>
     780:	21 e0       	ldi	r18, 0x01	; 1
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	40 e0       	ldi	r20, 0x00	; 0
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	79 01       	movw	r14, r18
     78a:	8a 01       	movw	r16, r20
     78c:	e6 28       	or	r14, r6
     78e:	f7 28       	or	r15, r7
     790:	08 29       	or	r16, r8
     792:	19 29       	or	r17, r9
     794:	3c c0       	rjmp	.+120    	; 0x80e <_fpadd_parts+0x192>
     796:	23 2b       	or	r18, r19
     798:	d1 f1       	breq	.+116    	; 0x80e <_fpadd_parts+0x192>
     79a:	26 0e       	add	r2, r22
     79c:	37 1e       	adc	r3, r23
     79e:	35 01       	movw	r6, r10
     7a0:	46 01       	movw	r8, r12
     7a2:	06 2e       	mov	r0, r22
     7a4:	04 c0       	rjmp	.+8      	; 0x7ae <_fpadd_parts+0x132>
     7a6:	96 94       	lsr	r9
     7a8:	87 94       	ror	r8
     7aa:	77 94       	ror	r7
     7ac:	67 94       	ror	r6
     7ae:	0a 94       	dec	r0
     7b0:	d2 f7       	brpl	.-12     	; 0x7a6 <_fpadd_parts+0x12a>
     7b2:	21 e0       	ldi	r18, 0x01	; 1
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	40 e0       	ldi	r20, 0x00	; 0
     7b8:	50 e0       	ldi	r21, 0x00	; 0
     7ba:	04 c0       	rjmp	.+8      	; 0x7c4 <_fpadd_parts+0x148>
     7bc:	22 0f       	add	r18, r18
     7be:	33 1f       	adc	r19, r19
     7c0:	44 1f       	adc	r20, r20
     7c2:	55 1f       	adc	r21, r21
     7c4:	6a 95       	dec	r22
     7c6:	d2 f7       	brpl	.-12     	; 0x7bc <_fpadd_parts+0x140>
     7c8:	21 50       	subi	r18, 0x01	; 1
     7ca:	30 40       	sbci	r19, 0x00	; 0
     7cc:	40 40       	sbci	r20, 0x00	; 0
     7ce:	50 40       	sbci	r21, 0x00	; 0
     7d0:	2a 21       	and	r18, r10
     7d2:	3b 21       	and	r19, r11
     7d4:	4c 21       	and	r20, r12
     7d6:	5d 21       	and	r21, r13
     7d8:	21 15       	cp	r18, r1
     7da:	31 05       	cpc	r19, r1
     7dc:	41 05       	cpc	r20, r1
     7de:	51 05       	cpc	r21, r1
     7e0:	21 f0       	breq	.+8      	; 0x7ea <_fpadd_parts+0x16e>
     7e2:	21 e0       	ldi	r18, 0x01	; 1
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	40 e0       	ldi	r20, 0x00	; 0
     7e8:	50 e0       	ldi	r21, 0x00	; 0
     7ea:	59 01       	movw	r10, r18
     7ec:	6a 01       	movw	r12, r20
     7ee:	a6 28       	or	r10, r6
     7f0:	b7 28       	or	r11, r7
     7f2:	c8 28       	or	r12, r8
     7f4:	d9 28       	or	r13, r9
     7f6:	0b c0       	rjmp	.+22     	; 0x80e <_fpadd_parts+0x192>
     7f8:	82 15       	cp	r24, r2
     7fa:	93 05       	cpc	r25, r3
     7fc:	2c f0       	brlt	.+10     	; 0x808 <_fpadd_parts+0x18c>
     7fe:	1c 01       	movw	r2, r24
     800:	aa 24       	eor	r10, r10
     802:	bb 24       	eor	r11, r11
     804:	65 01       	movw	r12, r10
     806:	03 c0       	rjmp	.+6      	; 0x80e <_fpadd_parts+0x192>
     808:	ee 24       	eor	r14, r14
     80a:	ff 24       	eor	r15, r15
     80c:	87 01       	movw	r16, r14
     80e:	11 96       	adiw	r26, 0x01	; 1
     810:	9c 91       	ld	r25, X
     812:	d2 01       	movw	r26, r4
     814:	11 96       	adiw	r26, 0x01	; 1
     816:	8c 91       	ld	r24, X
     818:	98 17       	cp	r25, r24
     81a:	09 f4       	brne	.+2      	; 0x81e <_fpadd_parts+0x1a2>
     81c:	45 c0       	rjmp	.+138    	; 0x8a8 <_fpadd_parts+0x22c>
     81e:	99 23       	and	r25, r25
     820:	39 f0       	breq	.+14     	; 0x830 <_fpadd_parts+0x1b4>
     822:	a8 01       	movw	r20, r16
     824:	97 01       	movw	r18, r14
     826:	2a 19       	sub	r18, r10
     828:	3b 09       	sbc	r19, r11
     82a:	4c 09       	sbc	r20, r12
     82c:	5d 09       	sbc	r21, r13
     82e:	06 c0       	rjmp	.+12     	; 0x83c <_fpadd_parts+0x1c0>
     830:	a6 01       	movw	r20, r12
     832:	95 01       	movw	r18, r10
     834:	2e 19       	sub	r18, r14
     836:	3f 09       	sbc	r19, r15
     838:	40 0b       	sbc	r20, r16
     83a:	51 0b       	sbc	r21, r17
     83c:	57 fd       	sbrc	r21, 7
     83e:	08 c0       	rjmp	.+16     	; 0x850 <_fpadd_parts+0x1d4>
     840:	11 82       	std	Z+1, r1	; 0x01
     842:	33 82       	std	Z+3, r3	; 0x03
     844:	22 82       	std	Z+2, r2	; 0x02
     846:	24 83       	std	Z+4, r18	; 0x04
     848:	35 83       	std	Z+5, r19	; 0x05
     84a:	46 83       	std	Z+6, r20	; 0x06
     84c:	57 83       	std	Z+7, r21	; 0x07
     84e:	1d c0       	rjmp	.+58     	; 0x88a <_fpadd_parts+0x20e>
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	81 83       	std	Z+1, r24	; 0x01
     854:	33 82       	std	Z+3, r3	; 0x03
     856:	22 82       	std	Z+2, r2	; 0x02
     858:	88 27       	eor	r24, r24
     85a:	99 27       	eor	r25, r25
     85c:	dc 01       	movw	r26, r24
     85e:	82 1b       	sub	r24, r18
     860:	93 0b       	sbc	r25, r19
     862:	a4 0b       	sbc	r26, r20
     864:	b5 0b       	sbc	r27, r21
     866:	84 83       	std	Z+4, r24	; 0x04
     868:	95 83       	std	Z+5, r25	; 0x05
     86a:	a6 83       	std	Z+6, r26	; 0x06
     86c:	b7 83       	std	Z+7, r27	; 0x07
     86e:	0d c0       	rjmp	.+26     	; 0x88a <_fpadd_parts+0x20e>
     870:	22 0f       	add	r18, r18
     872:	33 1f       	adc	r19, r19
     874:	44 1f       	adc	r20, r20
     876:	55 1f       	adc	r21, r21
     878:	24 83       	std	Z+4, r18	; 0x04
     87a:	35 83       	std	Z+5, r19	; 0x05
     87c:	46 83       	std	Z+6, r20	; 0x06
     87e:	57 83       	std	Z+7, r21	; 0x07
     880:	82 81       	ldd	r24, Z+2	; 0x02
     882:	93 81       	ldd	r25, Z+3	; 0x03
     884:	01 97       	sbiw	r24, 0x01	; 1
     886:	93 83       	std	Z+3, r25	; 0x03
     888:	82 83       	std	Z+2, r24	; 0x02
     88a:	24 81       	ldd	r18, Z+4	; 0x04
     88c:	35 81       	ldd	r19, Z+5	; 0x05
     88e:	46 81       	ldd	r20, Z+6	; 0x06
     890:	57 81       	ldd	r21, Z+7	; 0x07
     892:	da 01       	movw	r26, r20
     894:	c9 01       	movw	r24, r18
     896:	01 97       	sbiw	r24, 0x01	; 1
     898:	a1 09       	sbc	r26, r1
     89a:	b1 09       	sbc	r27, r1
     89c:	8f 5f       	subi	r24, 0xFF	; 255
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
     8a0:	af 4f       	sbci	r26, 0xFF	; 255
     8a2:	bf 43       	sbci	r27, 0x3F	; 63
     8a4:	28 f3       	brcs	.-54     	; 0x870 <_fpadd_parts+0x1f4>
     8a6:	0b c0       	rjmp	.+22     	; 0x8be <_fpadd_parts+0x242>
     8a8:	91 83       	std	Z+1, r25	; 0x01
     8aa:	33 82       	std	Z+3, r3	; 0x03
     8ac:	22 82       	std	Z+2, r2	; 0x02
     8ae:	ea 0c       	add	r14, r10
     8b0:	fb 1c       	adc	r15, r11
     8b2:	0c 1d       	adc	r16, r12
     8b4:	1d 1d       	adc	r17, r13
     8b6:	e4 82       	std	Z+4, r14	; 0x04
     8b8:	f5 82       	std	Z+5, r15	; 0x05
     8ba:	06 83       	std	Z+6, r16	; 0x06
     8bc:	17 83       	std	Z+7, r17	; 0x07
     8be:	83 e0       	ldi	r24, 0x03	; 3
     8c0:	80 83       	st	Z, r24
     8c2:	24 81       	ldd	r18, Z+4	; 0x04
     8c4:	35 81       	ldd	r19, Z+5	; 0x05
     8c6:	46 81       	ldd	r20, Z+6	; 0x06
     8c8:	57 81       	ldd	r21, Z+7	; 0x07
     8ca:	57 ff       	sbrs	r21, 7
     8cc:	1a c0       	rjmp	.+52     	; 0x902 <__stack+0x3>
     8ce:	c9 01       	movw	r24, r18
     8d0:	aa 27       	eor	r26, r26
     8d2:	97 fd       	sbrc	r25, 7
     8d4:	a0 95       	com	r26
     8d6:	ba 2f       	mov	r27, r26
     8d8:	81 70       	andi	r24, 0x01	; 1
     8da:	90 70       	andi	r25, 0x00	; 0
     8dc:	a0 70       	andi	r26, 0x00	; 0
     8de:	b0 70       	andi	r27, 0x00	; 0
     8e0:	56 95       	lsr	r21
     8e2:	47 95       	ror	r20
     8e4:	37 95       	ror	r19
     8e6:	27 95       	ror	r18
     8e8:	82 2b       	or	r24, r18
     8ea:	93 2b       	or	r25, r19
     8ec:	a4 2b       	or	r26, r20
     8ee:	b5 2b       	or	r27, r21
     8f0:	84 83       	std	Z+4, r24	; 0x04
     8f2:	95 83       	std	Z+5, r25	; 0x05
     8f4:	a6 83       	std	Z+6, r26	; 0x06
     8f6:	b7 83       	std	Z+7, r27	; 0x07
     8f8:	82 81       	ldd	r24, Z+2	; 0x02
     8fa:	93 81       	ldd	r25, Z+3	; 0x03
     8fc:	01 96       	adiw	r24, 0x01	; 1
     8fe:	93 83       	std	Z+3, r25	; 0x03
     900:	82 83       	std	Z+2, r24	; 0x02
     902:	df 01       	movw	r26, r30
     904:	01 c0       	rjmp	.+2      	; 0x908 <__stack+0x9>
     906:	d2 01       	movw	r26, r4
     908:	cd 01       	movw	r24, r26
     90a:	cd b7       	in	r28, 0x3d	; 61
     90c:	de b7       	in	r29, 0x3e	; 62
     90e:	e2 e1       	ldi	r30, 0x12	; 18
     910:	0c 94 35 09 	jmp	0x126a	; 0x126a <__epilogue_restores__>

00000914 <__subsf3>:
     914:	a0 e2       	ldi	r26, 0x20	; 32
     916:	b0 e0       	ldi	r27, 0x00	; 0
     918:	e0 e9       	ldi	r30, 0x90	; 144
     91a:	f4 e0       	ldi	r31, 0x04	; 4
     91c:	0c 94 25 09 	jmp	0x124a	; 0x124a <__prologue_saves__+0x18>
     920:	69 83       	std	Y+1, r22	; 0x01
     922:	7a 83       	std	Y+2, r23	; 0x02
     924:	8b 83       	std	Y+3, r24	; 0x03
     926:	9c 83       	std	Y+4, r25	; 0x04
     928:	2d 83       	std	Y+5, r18	; 0x05
     92a:	3e 83       	std	Y+6, r19	; 0x06
     92c:	4f 83       	std	Y+7, r20	; 0x07
     92e:	58 87       	std	Y+8, r21	; 0x08
     930:	e9 e0       	ldi	r30, 0x09	; 9
     932:	ee 2e       	mov	r14, r30
     934:	f1 2c       	mov	r15, r1
     936:	ec 0e       	add	r14, r28
     938:	fd 1e       	adc	r15, r29
     93a:	ce 01       	movw	r24, r28
     93c:	01 96       	adiw	r24, 0x01	; 1
     93e:	b7 01       	movw	r22, r14
     940:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     944:	8e 01       	movw	r16, r28
     946:	0f 5e       	subi	r16, 0xEF	; 239
     948:	1f 4f       	sbci	r17, 0xFF	; 255
     94a:	ce 01       	movw	r24, r28
     94c:	05 96       	adiw	r24, 0x05	; 5
     94e:	b8 01       	movw	r22, r16
     950:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     954:	8a 89       	ldd	r24, Y+18	; 0x12
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	89 27       	eor	r24, r25
     95a:	8a 8b       	std	Y+18, r24	; 0x12
     95c:	c7 01       	movw	r24, r14
     95e:	b8 01       	movw	r22, r16
     960:	ae 01       	movw	r20, r28
     962:	47 5e       	subi	r20, 0xE7	; 231
     964:	5f 4f       	sbci	r21, 0xFF	; 255
     966:	0e 94 3e 03 	call	0x67c	; 0x67c <_fpadd_parts>
     96a:	0e 94 73 07 	call	0xee6	; 0xee6 <__pack_f>
     96e:	a0 96       	adiw	r28, 0x20	; 32
     970:	e6 e0       	ldi	r30, 0x06	; 6
     972:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__epilogue_restores__+0x18>

00000976 <__addsf3>:
     976:	a0 e2       	ldi	r26, 0x20	; 32
     978:	b0 e0       	ldi	r27, 0x00	; 0
     97a:	e1 ec       	ldi	r30, 0xC1	; 193
     97c:	f4 e0       	ldi	r31, 0x04	; 4
     97e:	0c 94 25 09 	jmp	0x124a	; 0x124a <__prologue_saves__+0x18>
     982:	69 83       	std	Y+1, r22	; 0x01
     984:	7a 83       	std	Y+2, r23	; 0x02
     986:	8b 83       	std	Y+3, r24	; 0x03
     988:	9c 83       	std	Y+4, r25	; 0x04
     98a:	2d 83       	std	Y+5, r18	; 0x05
     98c:	3e 83       	std	Y+6, r19	; 0x06
     98e:	4f 83       	std	Y+7, r20	; 0x07
     990:	58 87       	std	Y+8, r21	; 0x08
     992:	f9 e0       	ldi	r31, 0x09	; 9
     994:	ef 2e       	mov	r14, r31
     996:	f1 2c       	mov	r15, r1
     998:	ec 0e       	add	r14, r28
     99a:	fd 1e       	adc	r15, r29
     99c:	ce 01       	movw	r24, r28
     99e:	01 96       	adiw	r24, 0x01	; 1
     9a0:	b7 01       	movw	r22, r14
     9a2:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     9a6:	8e 01       	movw	r16, r28
     9a8:	0f 5e       	subi	r16, 0xEF	; 239
     9aa:	1f 4f       	sbci	r17, 0xFF	; 255
     9ac:	ce 01       	movw	r24, r28
     9ae:	05 96       	adiw	r24, 0x05	; 5
     9b0:	b8 01       	movw	r22, r16
     9b2:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     9b6:	c7 01       	movw	r24, r14
     9b8:	b8 01       	movw	r22, r16
     9ba:	ae 01       	movw	r20, r28
     9bc:	47 5e       	subi	r20, 0xE7	; 231
     9be:	5f 4f       	sbci	r21, 0xFF	; 255
     9c0:	0e 94 3e 03 	call	0x67c	; 0x67c <_fpadd_parts>
     9c4:	0e 94 73 07 	call	0xee6	; 0xee6 <__pack_f>
     9c8:	a0 96       	adiw	r28, 0x20	; 32
     9ca:	e6 e0       	ldi	r30, 0x06	; 6
     9cc:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__epilogue_restores__+0x18>

000009d0 <__mulsf3>:
     9d0:	a0 e2       	ldi	r26, 0x20	; 32
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	ee ee       	ldi	r30, 0xEE	; 238
     9d6:	f4 e0       	ldi	r31, 0x04	; 4
     9d8:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__prologue_saves__>
     9dc:	69 83       	std	Y+1, r22	; 0x01
     9de:	7a 83       	std	Y+2, r23	; 0x02
     9e0:	8b 83       	std	Y+3, r24	; 0x03
     9e2:	9c 83       	std	Y+4, r25	; 0x04
     9e4:	2d 83       	std	Y+5, r18	; 0x05
     9e6:	3e 83       	std	Y+6, r19	; 0x06
     9e8:	4f 83       	std	Y+7, r20	; 0x07
     9ea:	58 87       	std	Y+8, r21	; 0x08
     9ec:	ce 01       	movw	r24, r28
     9ee:	01 96       	adiw	r24, 0x01	; 1
     9f0:	be 01       	movw	r22, r28
     9f2:	67 5f       	subi	r22, 0xF7	; 247
     9f4:	7f 4f       	sbci	r23, 0xFF	; 255
     9f6:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     9fa:	ce 01       	movw	r24, r28
     9fc:	05 96       	adiw	r24, 0x05	; 5
     9fe:	be 01       	movw	r22, r28
     a00:	6f 5e       	subi	r22, 0xEF	; 239
     a02:	7f 4f       	sbci	r23, 0xFF	; 255
     a04:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     a08:	99 85       	ldd	r25, Y+9	; 0x09
     a0a:	92 30       	cpi	r25, 0x02	; 2
     a0c:	88 f0       	brcs	.+34     	; 0xa30 <__mulsf3+0x60>
     a0e:	89 89       	ldd	r24, Y+17	; 0x11
     a10:	82 30       	cpi	r24, 0x02	; 2
     a12:	c8 f0       	brcs	.+50     	; 0xa46 <__mulsf3+0x76>
     a14:	94 30       	cpi	r25, 0x04	; 4
     a16:	19 f4       	brne	.+6      	; 0xa1e <__mulsf3+0x4e>
     a18:	82 30       	cpi	r24, 0x02	; 2
     a1a:	51 f4       	brne	.+20     	; 0xa30 <__mulsf3+0x60>
     a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__mulsf3+0x56>
     a1e:	84 30       	cpi	r24, 0x04	; 4
     a20:	29 f4       	brne	.+10     	; 0xa2c <__mulsf3+0x5c>
     a22:	92 30       	cpi	r25, 0x02	; 2
     a24:	81 f4       	brne	.+32     	; 0xa46 <__mulsf3+0x76>
     a26:	86 e0       	ldi	r24, 0x06	; 6
     a28:	91 e0       	ldi	r25, 0x01	; 1
     a2a:	c6 c0       	rjmp	.+396    	; 0xbb8 <__mulsf3+0x1e8>
     a2c:	92 30       	cpi	r25, 0x02	; 2
     a2e:	49 f4       	brne	.+18     	; 0xa42 <__mulsf3+0x72>
     a30:	20 e0       	ldi	r18, 0x00	; 0
     a32:	9a 85       	ldd	r25, Y+10	; 0x0a
     a34:	8a 89       	ldd	r24, Y+18	; 0x12
     a36:	98 13       	cpse	r25, r24
     a38:	21 e0       	ldi	r18, 0x01	; 1
     a3a:	2a 87       	std	Y+10, r18	; 0x0a
     a3c:	ce 01       	movw	r24, r28
     a3e:	09 96       	adiw	r24, 0x09	; 9
     a40:	bb c0       	rjmp	.+374    	; 0xbb8 <__mulsf3+0x1e8>
     a42:	82 30       	cpi	r24, 0x02	; 2
     a44:	49 f4       	brne	.+18     	; 0xa58 <__mulsf3+0x88>
     a46:	20 e0       	ldi	r18, 0x00	; 0
     a48:	9a 85       	ldd	r25, Y+10	; 0x0a
     a4a:	8a 89       	ldd	r24, Y+18	; 0x12
     a4c:	98 13       	cpse	r25, r24
     a4e:	21 e0       	ldi	r18, 0x01	; 1
     a50:	2a 8b       	std	Y+18, r18	; 0x12
     a52:	ce 01       	movw	r24, r28
     a54:	41 96       	adiw	r24, 0x11	; 17
     a56:	b0 c0       	rjmp	.+352    	; 0xbb8 <__mulsf3+0x1e8>
     a58:	2d 84       	ldd	r2, Y+13	; 0x0d
     a5a:	3e 84       	ldd	r3, Y+14	; 0x0e
     a5c:	4f 84       	ldd	r4, Y+15	; 0x0f
     a5e:	58 88       	ldd	r5, Y+16	; 0x10
     a60:	6d 88       	ldd	r6, Y+21	; 0x15
     a62:	7e 88       	ldd	r7, Y+22	; 0x16
     a64:	8f 88       	ldd	r8, Y+23	; 0x17
     a66:	98 8c       	ldd	r9, Y+24	; 0x18
     a68:	ee 24       	eor	r14, r14
     a6a:	ff 24       	eor	r15, r15
     a6c:	87 01       	movw	r16, r14
     a6e:	aa 24       	eor	r10, r10
     a70:	bb 24       	eor	r11, r11
     a72:	65 01       	movw	r12, r10
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	50 e0       	ldi	r21, 0x00	; 0
     a78:	60 e0       	ldi	r22, 0x00	; 0
     a7a:	70 e0       	ldi	r23, 0x00	; 0
     a7c:	e0 e0       	ldi	r30, 0x00	; 0
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	c1 01       	movw	r24, r2
     a82:	81 70       	andi	r24, 0x01	; 1
     a84:	90 70       	andi	r25, 0x00	; 0
     a86:	89 2b       	or	r24, r25
     a88:	e9 f0       	breq	.+58     	; 0xac4 <__mulsf3+0xf4>
     a8a:	e6 0c       	add	r14, r6
     a8c:	f7 1c       	adc	r15, r7
     a8e:	08 1d       	adc	r16, r8
     a90:	19 1d       	adc	r17, r9
     a92:	9a 01       	movw	r18, r20
     a94:	ab 01       	movw	r20, r22
     a96:	2a 0d       	add	r18, r10
     a98:	3b 1d       	adc	r19, r11
     a9a:	4c 1d       	adc	r20, r12
     a9c:	5d 1d       	adc	r21, r13
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	a0 e0       	ldi	r26, 0x00	; 0
     aa4:	b0 e0       	ldi	r27, 0x00	; 0
     aa6:	e6 14       	cp	r14, r6
     aa8:	f7 04       	cpc	r15, r7
     aaa:	08 05       	cpc	r16, r8
     aac:	19 05       	cpc	r17, r9
     aae:	20 f4       	brcc	.+8      	; 0xab8 <__mulsf3+0xe8>
     ab0:	81 e0       	ldi	r24, 0x01	; 1
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	a0 e0       	ldi	r26, 0x00	; 0
     ab6:	b0 e0       	ldi	r27, 0x00	; 0
     ab8:	ba 01       	movw	r22, r20
     aba:	a9 01       	movw	r20, r18
     abc:	48 0f       	add	r20, r24
     abe:	59 1f       	adc	r21, r25
     ac0:	6a 1f       	adc	r22, r26
     ac2:	7b 1f       	adc	r23, r27
     ac4:	aa 0c       	add	r10, r10
     ac6:	bb 1c       	adc	r11, r11
     ac8:	cc 1c       	adc	r12, r12
     aca:	dd 1c       	adc	r13, r13
     acc:	97 fe       	sbrs	r9, 7
     ace:	08 c0       	rjmp	.+16     	; 0xae0 <__mulsf3+0x110>
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	a0 e0       	ldi	r26, 0x00	; 0
     ad6:	b0 e0       	ldi	r27, 0x00	; 0
     ad8:	a8 2a       	or	r10, r24
     ada:	b9 2a       	or	r11, r25
     adc:	ca 2a       	or	r12, r26
     ade:	db 2a       	or	r13, r27
     ae0:	31 96       	adiw	r30, 0x01	; 1
     ae2:	e0 32       	cpi	r30, 0x20	; 32
     ae4:	f1 05       	cpc	r31, r1
     ae6:	49 f0       	breq	.+18     	; 0xafa <__mulsf3+0x12a>
     ae8:	66 0c       	add	r6, r6
     aea:	77 1c       	adc	r7, r7
     aec:	88 1c       	adc	r8, r8
     aee:	99 1c       	adc	r9, r9
     af0:	56 94       	lsr	r5
     af2:	47 94       	ror	r4
     af4:	37 94       	ror	r3
     af6:	27 94       	ror	r2
     af8:	c3 cf       	rjmp	.-122    	; 0xa80 <__mulsf3+0xb0>
     afa:	fa 85       	ldd	r31, Y+10	; 0x0a
     afc:	ea 89       	ldd	r30, Y+18	; 0x12
     afe:	2b 89       	ldd	r18, Y+19	; 0x13
     b00:	3c 89       	ldd	r19, Y+20	; 0x14
     b02:	8b 85       	ldd	r24, Y+11	; 0x0b
     b04:	9c 85       	ldd	r25, Y+12	; 0x0c
     b06:	28 0f       	add	r18, r24
     b08:	39 1f       	adc	r19, r25
     b0a:	2e 5f       	subi	r18, 0xFE	; 254
     b0c:	3f 4f       	sbci	r19, 0xFF	; 255
     b0e:	17 c0       	rjmp	.+46     	; 0xb3e <__mulsf3+0x16e>
     b10:	ca 01       	movw	r24, r20
     b12:	81 70       	andi	r24, 0x01	; 1
     b14:	90 70       	andi	r25, 0x00	; 0
     b16:	89 2b       	or	r24, r25
     b18:	61 f0       	breq	.+24     	; 0xb32 <__mulsf3+0x162>
     b1a:	16 95       	lsr	r17
     b1c:	07 95       	ror	r16
     b1e:	f7 94       	ror	r15
     b20:	e7 94       	ror	r14
     b22:	80 e0       	ldi	r24, 0x00	; 0
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	a0 e0       	ldi	r26, 0x00	; 0
     b28:	b0 e8       	ldi	r27, 0x80	; 128
     b2a:	e8 2a       	or	r14, r24
     b2c:	f9 2a       	or	r15, r25
     b2e:	0a 2b       	or	r16, r26
     b30:	1b 2b       	or	r17, r27
     b32:	76 95       	lsr	r23
     b34:	67 95       	ror	r22
     b36:	57 95       	ror	r21
     b38:	47 95       	ror	r20
     b3a:	2f 5f       	subi	r18, 0xFF	; 255
     b3c:	3f 4f       	sbci	r19, 0xFF	; 255
     b3e:	77 fd       	sbrc	r23, 7
     b40:	e7 cf       	rjmp	.-50     	; 0xb10 <__mulsf3+0x140>
     b42:	0c c0       	rjmp	.+24     	; 0xb5c <__mulsf3+0x18c>
     b44:	44 0f       	add	r20, r20
     b46:	55 1f       	adc	r21, r21
     b48:	66 1f       	adc	r22, r22
     b4a:	77 1f       	adc	r23, r23
     b4c:	17 fd       	sbrc	r17, 7
     b4e:	41 60       	ori	r20, 0x01	; 1
     b50:	ee 0c       	add	r14, r14
     b52:	ff 1c       	adc	r15, r15
     b54:	00 1f       	adc	r16, r16
     b56:	11 1f       	adc	r17, r17
     b58:	21 50       	subi	r18, 0x01	; 1
     b5a:	30 40       	sbci	r19, 0x00	; 0
     b5c:	40 30       	cpi	r20, 0x00	; 0
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	59 07       	cpc	r21, r25
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	69 07       	cpc	r22, r25
     b66:	90 e4       	ldi	r25, 0x40	; 64
     b68:	79 07       	cpc	r23, r25
     b6a:	60 f3       	brcs	.-40     	; 0xb44 <__mulsf3+0x174>
     b6c:	2b 8f       	std	Y+27, r18	; 0x1b
     b6e:	3c 8f       	std	Y+28, r19	; 0x1c
     b70:	db 01       	movw	r26, r22
     b72:	ca 01       	movw	r24, r20
     b74:	8f 77       	andi	r24, 0x7F	; 127
     b76:	90 70       	andi	r25, 0x00	; 0
     b78:	a0 70       	andi	r26, 0x00	; 0
     b7a:	b0 70       	andi	r27, 0x00	; 0
     b7c:	80 34       	cpi	r24, 0x40	; 64
     b7e:	91 05       	cpc	r25, r1
     b80:	a1 05       	cpc	r26, r1
     b82:	b1 05       	cpc	r27, r1
     b84:	61 f4       	brne	.+24     	; 0xb9e <__mulsf3+0x1ce>
     b86:	47 fd       	sbrc	r20, 7
     b88:	0a c0       	rjmp	.+20     	; 0xb9e <__mulsf3+0x1ce>
     b8a:	e1 14       	cp	r14, r1
     b8c:	f1 04       	cpc	r15, r1
     b8e:	01 05       	cpc	r16, r1
     b90:	11 05       	cpc	r17, r1
     b92:	29 f0       	breq	.+10     	; 0xb9e <__mulsf3+0x1ce>
     b94:	40 5c       	subi	r20, 0xC0	; 192
     b96:	5f 4f       	sbci	r21, 0xFF	; 255
     b98:	6f 4f       	sbci	r22, 0xFF	; 255
     b9a:	7f 4f       	sbci	r23, 0xFF	; 255
     b9c:	40 78       	andi	r20, 0x80	; 128
     b9e:	1a 8e       	std	Y+26, r1	; 0x1a
     ba0:	fe 17       	cp	r31, r30
     ba2:	11 f0       	breq	.+4      	; 0xba8 <__mulsf3+0x1d8>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	8a 8f       	std	Y+26, r24	; 0x1a
     ba8:	4d 8f       	std	Y+29, r20	; 0x1d
     baa:	5e 8f       	std	Y+30, r21	; 0x1e
     bac:	6f 8f       	std	Y+31, r22	; 0x1f
     bae:	78 a3       	std	Y+32, r23	; 0x20
     bb0:	83 e0       	ldi	r24, 0x03	; 3
     bb2:	89 8f       	std	Y+25, r24	; 0x19
     bb4:	ce 01       	movw	r24, r28
     bb6:	49 96       	adiw	r24, 0x19	; 25
     bb8:	0e 94 73 07 	call	0xee6	; 0xee6 <__pack_f>
     bbc:	a0 96       	adiw	r28, 0x20	; 32
     bbe:	e2 e1       	ldi	r30, 0x12	; 18
     bc0:	0c 94 35 09 	jmp	0x126a	; 0x126a <__epilogue_restores__>

00000bc4 <__gtsf2>:
     bc4:	a8 e1       	ldi	r26, 0x18	; 24
     bc6:	b0 e0       	ldi	r27, 0x00	; 0
     bc8:	e8 ee       	ldi	r30, 0xE8	; 232
     bca:	f5 e0       	ldi	r31, 0x05	; 5
     bcc:	0c 94 25 09 	jmp	0x124a	; 0x124a <__prologue_saves__+0x18>
     bd0:	69 83       	std	Y+1, r22	; 0x01
     bd2:	7a 83       	std	Y+2, r23	; 0x02
     bd4:	8b 83       	std	Y+3, r24	; 0x03
     bd6:	9c 83       	std	Y+4, r25	; 0x04
     bd8:	2d 83       	std	Y+5, r18	; 0x05
     bda:	3e 83       	std	Y+6, r19	; 0x06
     bdc:	4f 83       	std	Y+7, r20	; 0x07
     bde:	58 87       	std	Y+8, r21	; 0x08
     be0:	89 e0       	ldi	r24, 0x09	; 9
     be2:	e8 2e       	mov	r14, r24
     be4:	f1 2c       	mov	r15, r1
     be6:	ec 0e       	add	r14, r28
     be8:	fd 1e       	adc	r15, r29
     bea:	ce 01       	movw	r24, r28
     bec:	01 96       	adiw	r24, 0x01	; 1
     bee:	b7 01       	movw	r22, r14
     bf0:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     bf4:	8e 01       	movw	r16, r28
     bf6:	0f 5e       	subi	r16, 0xEF	; 239
     bf8:	1f 4f       	sbci	r17, 0xFF	; 255
     bfa:	ce 01       	movw	r24, r28
     bfc:	05 96       	adiw	r24, 0x05	; 5
     bfe:	b8 01       	movw	r22, r16
     c00:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     c04:	89 85       	ldd	r24, Y+9	; 0x09
     c06:	82 30       	cpi	r24, 0x02	; 2
     c08:	40 f0       	brcs	.+16     	; 0xc1a <__gtsf2+0x56>
     c0a:	89 89       	ldd	r24, Y+17	; 0x11
     c0c:	82 30       	cpi	r24, 0x02	; 2
     c0e:	28 f0       	brcs	.+10     	; 0xc1a <__gtsf2+0x56>
     c10:	c7 01       	movw	r24, r14
     c12:	b8 01       	movw	r22, r16
     c14:	0e 94 c0 08 	call	0x1180	; 0x1180 <__fpcmp_parts_f>
     c18:	01 c0       	rjmp	.+2      	; 0xc1c <__gtsf2+0x58>
     c1a:	8f ef       	ldi	r24, 0xFF	; 255
     c1c:	68 96       	adiw	r28, 0x18	; 24
     c1e:	e6 e0       	ldi	r30, 0x06	; 6
     c20:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__epilogue_restores__+0x18>

00000c24 <__gesf2>:
     c24:	a8 e1       	ldi	r26, 0x18	; 24
     c26:	b0 e0       	ldi	r27, 0x00	; 0
     c28:	e8 e1       	ldi	r30, 0x18	; 24
     c2a:	f6 e0       	ldi	r31, 0x06	; 6
     c2c:	0c 94 25 09 	jmp	0x124a	; 0x124a <__prologue_saves__+0x18>
     c30:	69 83       	std	Y+1, r22	; 0x01
     c32:	7a 83       	std	Y+2, r23	; 0x02
     c34:	8b 83       	std	Y+3, r24	; 0x03
     c36:	9c 83       	std	Y+4, r25	; 0x04
     c38:	2d 83       	std	Y+5, r18	; 0x05
     c3a:	3e 83       	std	Y+6, r19	; 0x06
     c3c:	4f 83       	std	Y+7, r20	; 0x07
     c3e:	58 87       	std	Y+8, r21	; 0x08
     c40:	89 e0       	ldi	r24, 0x09	; 9
     c42:	e8 2e       	mov	r14, r24
     c44:	f1 2c       	mov	r15, r1
     c46:	ec 0e       	add	r14, r28
     c48:	fd 1e       	adc	r15, r29
     c4a:	ce 01       	movw	r24, r28
     c4c:	01 96       	adiw	r24, 0x01	; 1
     c4e:	b7 01       	movw	r22, r14
     c50:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     c54:	8e 01       	movw	r16, r28
     c56:	0f 5e       	subi	r16, 0xEF	; 239
     c58:	1f 4f       	sbci	r17, 0xFF	; 255
     c5a:	ce 01       	movw	r24, r28
     c5c:	05 96       	adiw	r24, 0x05	; 5
     c5e:	b8 01       	movw	r22, r16
     c60:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     c64:	89 85       	ldd	r24, Y+9	; 0x09
     c66:	82 30       	cpi	r24, 0x02	; 2
     c68:	40 f0       	brcs	.+16     	; 0xc7a <__gesf2+0x56>
     c6a:	89 89       	ldd	r24, Y+17	; 0x11
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	28 f0       	brcs	.+10     	; 0xc7a <__gesf2+0x56>
     c70:	c7 01       	movw	r24, r14
     c72:	b8 01       	movw	r22, r16
     c74:	0e 94 c0 08 	call	0x1180	; 0x1180 <__fpcmp_parts_f>
     c78:	01 c0       	rjmp	.+2      	; 0xc7c <__gesf2+0x58>
     c7a:	8f ef       	ldi	r24, 0xFF	; 255
     c7c:	68 96       	adiw	r28, 0x18	; 24
     c7e:	e6 e0       	ldi	r30, 0x06	; 6
     c80:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__epilogue_restores__+0x18>

00000c84 <__ltsf2>:
     c84:	a8 e1       	ldi	r26, 0x18	; 24
     c86:	b0 e0       	ldi	r27, 0x00	; 0
     c88:	e8 e4       	ldi	r30, 0x48	; 72
     c8a:	f6 e0       	ldi	r31, 0x06	; 6
     c8c:	0c 94 25 09 	jmp	0x124a	; 0x124a <__prologue_saves__+0x18>
     c90:	69 83       	std	Y+1, r22	; 0x01
     c92:	7a 83       	std	Y+2, r23	; 0x02
     c94:	8b 83       	std	Y+3, r24	; 0x03
     c96:	9c 83       	std	Y+4, r25	; 0x04
     c98:	2d 83       	std	Y+5, r18	; 0x05
     c9a:	3e 83       	std	Y+6, r19	; 0x06
     c9c:	4f 83       	std	Y+7, r20	; 0x07
     c9e:	58 87       	std	Y+8, r21	; 0x08
     ca0:	89 e0       	ldi	r24, 0x09	; 9
     ca2:	e8 2e       	mov	r14, r24
     ca4:	f1 2c       	mov	r15, r1
     ca6:	ec 0e       	add	r14, r28
     ca8:	fd 1e       	adc	r15, r29
     caa:	ce 01       	movw	r24, r28
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	b7 01       	movw	r22, r14
     cb0:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     cb4:	8e 01       	movw	r16, r28
     cb6:	0f 5e       	subi	r16, 0xEF	; 239
     cb8:	1f 4f       	sbci	r17, 0xFF	; 255
     cba:	ce 01       	movw	r24, r28
     cbc:	05 96       	adiw	r24, 0x05	; 5
     cbe:	b8 01       	movw	r22, r16
     cc0:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     cc4:	89 85       	ldd	r24, Y+9	; 0x09
     cc6:	82 30       	cpi	r24, 0x02	; 2
     cc8:	40 f0       	brcs	.+16     	; 0xcda <__ltsf2+0x56>
     cca:	89 89       	ldd	r24, Y+17	; 0x11
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	28 f0       	brcs	.+10     	; 0xcda <__ltsf2+0x56>
     cd0:	c7 01       	movw	r24, r14
     cd2:	b8 01       	movw	r22, r16
     cd4:	0e 94 c0 08 	call	0x1180	; 0x1180 <__fpcmp_parts_f>
     cd8:	01 c0       	rjmp	.+2      	; 0xcdc <__ltsf2+0x58>
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	68 96       	adiw	r28, 0x18	; 24
     cde:	e6 e0       	ldi	r30, 0x06	; 6
     ce0:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__epilogue_restores__+0x18>

00000ce4 <__floatsisf>:
     ce4:	a8 e0       	ldi	r26, 0x08	; 8
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e8 e7       	ldi	r30, 0x78	; 120
     cea:	f6 e0       	ldi	r31, 0x06	; 6
     cec:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__prologue_saves__+0x12>
     cf0:	9b 01       	movw	r18, r22
     cf2:	ac 01       	movw	r20, r24
     cf4:	83 e0       	ldi	r24, 0x03	; 3
     cf6:	89 83       	std	Y+1, r24	; 0x01
     cf8:	da 01       	movw	r26, r20
     cfa:	c9 01       	movw	r24, r18
     cfc:	88 27       	eor	r24, r24
     cfe:	b7 fd       	sbrc	r27, 7
     d00:	83 95       	inc	r24
     d02:	99 27       	eor	r25, r25
     d04:	aa 27       	eor	r26, r26
     d06:	bb 27       	eor	r27, r27
     d08:	b8 2e       	mov	r11, r24
     d0a:	21 15       	cp	r18, r1
     d0c:	31 05       	cpc	r19, r1
     d0e:	41 05       	cpc	r20, r1
     d10:	51 05       	cpc	r21, r1
     d12:	19 f4       	brne	.+6      	; 0xd1a <__floatsisf+0x36>
     d14:	82 e0       	ldi	r24, 0x02	; 2
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	3a c0       	rjmp	.+116    	; 0xd8e <__floatsisf+0xaa>
     d1a:	88 23       	and	r24, r24
     d1c:	a9 f0       	breq	.+42     	; 0xd48 <__floatsisf+0x64>
     d1e:	20 30       	cpi	r18, 0x00	; 0
     d20:	80 e0       	ldi	r24, 0x00	; 0
     d22:	38 07       	cpc	r19, r24
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	48 07       	cpc	r20, r24
     d28:	80 e8       	ldi	r24, 0x80	; 128
     d2a:	58 07       	cpc	r21, r24
     d2c:	29 f4       	brne	.+10     	; 0xd38 <__floatsisf+0x54>
     d2e:	60 e0       	ldi	r22, 0x00	; 0
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	9f ec       	ldi	r25, 0xCF	; 207
     d36:	30 c0       	rjmp	.+96     	; 0xd98 <__floatsisf+0xb4>
     d38:	ee 24       	eor	r14, r14
     d3a:	ff 24       	eor	r15, r15
     d3c:	87 01       	movw	r16, r14
     d3e:	e2 1a       	sub	r14, r18
     d40:	f3 0a       	sbc	r15, r19
     d42:	04 0b       	sbc	r16, r20
     d44:	15 0b       	sbc	r17, r21
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <__floatsisf+0x68>
     d48:	79 01       	movw	r14, r18
     d4a:	8a 01       	movw	r16, r20
     d4c:	8e e1       	ldi	r24, 0x1E	; 30
     d4e:	c8 2e       	mov	r12, r24
     d50:	d1 2c       	mov	r13, r1
     d52:	dc 82       	std	Y+4, r13	; 0x04
     d54:	cb 82       	std	Y+3, r12	; 0x03
     d56:	ed 82       	std	Y+5, r14	; 0x05
     d58:	fe 82       	std	Y+6, r15	; 0x06
     d5a:	0f 83       	std	Y+7, r16	; 0x07
     d5c:	18 87       	std	Y+8, r17	; 0x08
     d5e:	c8 01       	movw	r24, r16
     d60:	b7 01       	movw	r22, r14
     d62:	0e 94 24 07 	call	0xe48	; 0xe48 <__clzsi2>
     d66:	01 97       	sbiw	r24, 0x01	; 1
     d68:	18 16       	cp	r1, r24
     d6a:	19 06       	cpc	r1, r25
     d6c:	84 f4       	brge	.+32     	; 0xd8e <__floatsisf+0xaa>
     d6e:	08 2e       	mov	r0, r24
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <__floatsisf+0x96>
     d72:	ee 0c       	add	r14, r14
     d74:	ff 1c       	adc	r15, r15
     d76:	00 1f       	adc	r16, r16
     d78:	11 1f       	adc	r17, r17
     d7a:	0a 94       	dec	r0
     d7c:	d2 f7       	brpl	.-12     	; 0xd72 <__floatsisf+0x8e>
     d7e:	ed 82       	std	Y+5, r14	; 0x05
     d80:	fe 82       	std	Y+6, r15	; 0x06
     d82:	0f 83       	std	Y+7, r16	; 0x07
     d84:	18 87       	std	Y+8, r17	; 0x08
     d86:	c8 1a       	sub	r12, r24
     d88:	d9 0a       	sbc	r13, r25
     d8a:	dc 82       	std	Y+4, r13	; 0x04
     d8c:	cb 82       	std	Y+3, r12	; 0x03
     d8e:	ba 82       	std	Y+2, r11	; 0x02
     d90:	ce 01       	movw	r24, r28
     d92:	01 96       	adiw	r24, 0x01	; 1
     d94:	0e 94 73 07 	call	0xee6	; 0xee6 <__pack_f>
     d98:	28 96       	adiw	r28, 0x08	; 8
     d9a:	e9 e0       	ldi	r30, 0x09	; 9
     d9c:	0c 94 3e 09 	jmp	0x127c	; 0x127c <__epilogue_restores__+0x12>

00000da0 <__fixsfsi>:
     da0:	ac e0       	ldi	r26, 0x0C	; 12
     da2:	b0 e0       	ldi	r27, 0x00	; 0
     da4:	e6 ed       	ldi	r30, 0xD6	; 214
     da6:	f6 e0       	ldi	r31, 0x06	; 6
     da8:	0c 94 29 09 	jmp	0x1252	; 0x1252 <__prologue_saves__+0x20>
     dac:	69 83       	std	Y+1, r22	; 0x01
     dae:	7a 83       	std	Y+2, r23	; 0x02
     db0:	8b 83       	std	Y+3, r24	; 0x03
     db2:	9c 83       	std	Y+4, r25	; 0x04
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	be 01       	movw	r22, r28
     dba:	6b 5f       	subi	r22, 0xFB	; 251
     dbc:	7f 4f       	sbci	r23, 0xFF	; 255
     dbe:	0e 94 48 08 	call	0x1090	; 0x1090 <__unpack_f>
     dc2:	8d 81       	ldd	r24, Y+5	; 0x05
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	61 f1       	breq	.+88     	; 0xe20 <__fixsfsi+0x80>
     dc8:	82 30       	cpi	r24, 0x02	; 2
     dca:	50 f1       	brcs	.+84     	; 0xe20 <__fixsfsi+0x80>
     dcc:	84 30       	cpi	r24, 0x04	; 4
     dce:	21 f4       	brne	.+8      	; 0xdd8 <__fixsfsi+0x38>
     dd0:	8e 81       	ldd	r24, Y+6	; 0x06
     dd2:	88 23       	and	r24, r24
     dd4:	51 f1       	breq	.+84     	; 0xe2a <__fixsfsi+0x8a>
     dd6:	2e c0       	rjmp	.+92     	; 0xe34 <__fixsfsi+0x94>
     dd8:	2f 81       	ldd	r18, Y+7	; 0x07
     dda:	38 85       	ldd	r19, Y+8	; 0x08
     ddc:	37 fd       	sbrc	r19, 7
     dde:	20 c0       	rjmp	.+64     	; 0xe20 <__fixsfsi+0x80>
     de0:	6e 81       	ldd	r22, Y+6	; 0x06
     de2:	2f 31       	cpi	r18, 0x1F	; 31
     de4:	31 05       	cpc	r19, r1
     de6:	1c f0       	brlt	.+6      	; 0xdee <__fixsfsi+0x4e>
     de8:	66 23       	and	r22, r22
     dea:	f9 f0       	breq	.+62     	; 0xe2a <__fixsfsi+0x8a>
     dec:	23 c0       	rjmp	.+70     	; 0xe34 <__fixsfsi+0x94>
     dee:	8e e1       	ldi	r24, 0x1E	; 30
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	82 1b       	sub	r24, r18
     df4:	93 0b       	sbc	r25, r19
     df6:	29 85       	ldd	r18, Y+9	; 0x09
     df8:	3a 85       	ldd	r19, Y+10	; 0x0a
     dfa:	4b 85       	ldd	r20, Y+11	; 0x0b
     dfc:	5c 85       	ldd	r21, Y+12	; 0x0c
     dfe:	04 c0       	rjmp	.+8      	; 0xe08 <__fixsfsi+0x68>
     e00:	56 95       	lsr	r21
     e02:	47 95       	ror	r20
     e04:	37 95       	ror	r19
     e06:	27 95       	ror	r18
     e08:	8a 95       	dec	r24
     e0a:	d2 f7       	brpl	.-12     	; 0xe00 <__fixsfsi+0x60>
     e0c:	66 23       	and	r22, r22
     e0e:	b1 f0       	breq	.+44     	; 0xe3c <__fixsfsi+0x9c>
     e10:	50 95       	com	r21
     e12:	40 95       	com	r20
     e14:	30 95       	com	r19
     e16:	21 95       	neg	r18
     e18:	3f 4f       	sbci	r19, 0xFF	; 255
     e1a:	4f 4f       	sbci	r20, 0xFF	; 255
     e1c:	5f 4f       	sbci	r21, 0xFF	; 255
     e1e:	0e c0       	rjmp	.+28     	; 0xe3c <__fixsfsi+0x9c>
     e20:	20 e0       	ldi	r18, 0x00	; 0
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	40 e0       	ldi	r20, 0x00	; 0
     e26:	50 e0       	ldi	r21, 0x00	; 0
     e28:	09 c0       	rjmp	.+18     	; 0xe3c <__fixsfsi+0x9c>
     e2a:	2f ef       	ldi	r18, 0xFF	; 255
     e2c:	3f ef       	ldi	r19, 0xFF	; 255
     e2e:	4f ef       	ldi	r20, 0xFF	; 255
     e30:	5f e7       	ldi	r21, 0x7F	; 127
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__fixsfsi+0x9c>
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	40 e0       	ldi	r20, 0x00	; 0
     e3a:	50 e8       	ldi	r21, 0x80	; 128
     e3c:	b9 01       	movw	r22, r18
     e3e:	ca 01       	movw	r24, r20
     e40:	2c 96       	adiw	r28, 0x0c	; 12
     e42:	e2 e0       	ldi	r30, 0x02	; 2
     e44:	0c 94 45 09 	jmp	0x128a	; 0x128a <__epilogue_restores__+0x20>

00000e48 <__clzsi2>:
     e48:	ef 92       	push	r14
     e4a:	ff 92       	push	r15
     e4c:	0f 93       	push	r16
     e4e:	1f 93       	push	r17
     e50:	7b 01       	movw	r14, r22
     e52:	8c 01       	movw	r16, r24
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	e8 16       	cp	r14, r24
     e58:	80 e0       	ldi	r24, 0x00	; 0
     e5a:	f8 06       	cpc	r15, r24
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	08 07       	cpc	r16, r24
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	18 07       	cpc	r17, r24
     e64:	88 f4       	brcc	.+34     	; 0xe88 <__clzsi2+0x40>
     e66:	8f ef       	ldi	r24, 0xFF	; 255
     e68:	e8 16       	cp	r14, r24
     e6a:	f1 04       	cpc	r15, r1
     e6c:	01 05       	cpc	r16, r1
     e6e:	11 05       	cpc	r17, r1
     e70:	31 f0       	breq	.+12     	; 0xe7e <__clzsi2+0x36>
     e72:	28 f0       	brcs	.+10     	; 0xe7e <__clzsi2+0x36>
     e74:	88 e0       	ldi	r24, 0x08	; 8
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	a0 e0       	ldi	r26, 0x00	; 0
     e7a:	b0 e0       	ldi	r27, 0x00	; 0
     e7c:	17 c0       	rjmp	.+46     	; 0xeac <__clzsi2+0x64>
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	a0 e0       	ldi	r26, 0x00	; 0
     e84:	b0 e0       	ldi	r27, 0x00	; 0
     e86:	12 c0       	rjmp	.+36     	; 0xeac <__clzsi2+0x64>
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	e8 16       	cp	r14, r24
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	f8 06       	cpc	r15, r24
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	08 07       	cpc	r16, r24
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	18 07       	cpc	r17, r24
     e98:	28 f0       	brcs	.+10     	; 0xea4 <__clzsi2+0x5c>
     e9a:	88 e1       	ldi	r24, 0x18	; 24
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	a0 e0       	ldi	r26, 0x00	; 0
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	04 c0       	rjmp	.+8      	; 0xeac <__clzsi2+0x64>
     ea4:	80 e1       	ldi	r24, 0x10	; 16
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	a0 e0       	ldi	r26, 0x00	; 0
     eaa:	b0 e0       	ldi	r27, 0x00	; 0
     eac:	20 e2       	ldi	r18, 0x20	; 32
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	28 1b       	sub	r18, r24
     eb6:	39 0b       	sbc	r19, r25
     eb8:	4a 0b       	sbc	r20, r26
     eba:	5b 0b       	sbc	r21, r27
     ebc:	04 c0       	rjmp	.+8      	; 0xec6 <__clzsi2+0x7e>
     ebe:	16 95       	lsr	r17
     ec0:	07 95       	ror	r16
     ec2:	f7 94       	ror	r15
     ec4:	e7 94       	ror	r14
     ec6:	8a 95       	dec	r24
     ec8:	d2 f7       	brpl	.-12     	; 0xebe <__clzsi2+0x76>
     eca:	f7 01       	movw	r30, r14
     ecc:	e2 5f       	subi	r30, 0xF2	; 242
     ece:	fe 4f       	sbci	r31, 0xFE	; 254
     ed0:	80 81       	ld	r24, Z
     ed2:	28 1b       	sub	r18, r24
     ed4:	31 09       	sbc	r19, r1
     ed6:	41 09       	sbc	r20, r1
     ed8:	51 09       	sbc	r21, r1
     eda:	c9 01       	movw	r24, r18
     edc:	1f 91       	pop	r17
     ede:	0f 91       	pop	r16
     ee0:	ff 90       	pop	r15
     ee2:	ef 90       	pop	r14
     ee4:	08 95       	ret

00000ee6 <__pack_f>:
     ee6:	df 92       	push	r13
     ee8:	ef 92       	push	r14
     eea:	ff 92       	push	r15
     eec:	0f 93       	push	r16
     eee:	1f 93       	push	r17
     ef0:	fc 01       	movw	r30, r24
     ef2:	e4 80       	ldd	r14, Z+4	; 0x04
     ef4:	f5 80       	ldd	r15, Z+5	; 0x05
     ef6:	06 81       	ldd	r16, Z+6	; 0x06
     ef8:	17 81       	ldd	r17, Z+7	; 0x07
     efa:	d1 80       	ldd	r13, Z+1	; 0x01
     efc:	80 81       	ld	r24, Z
     efe:	82 30       	cpi	r24, 0x02	; 2
     f00:	48 f4       	brcc	.+18     	; 0xf14 <__pack_f+0x2e>
     f02:	80 e0       	ldi	r24, 0x00	; 0
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	a0 e1       	ldi	r26, 0x10	; 16
     f08:	b0 e0       	ldi	r27, 0x00	; 0
     f0a:	e8 2a       	or	r14, r24
     f0c:	f9 2a       	or	r15, r25
     f0e:	0a 2b       	or	r16, r26
     f10:	1b 2b       	or	r17, r27
     f12:	a5 c0       	rjmp	.+330    	; 0x105e <__pack_f+0x178>
     f14:	84 30       	cpi	r24, 0x04	; 4
     f16:	09 f4       	brne	.+2      	; 0xf1a <__pack_f+0x34>
     f18:	9f c0       	rjmp	.+318    	; 0x1058 <__pack_f+0x172>
     f1a:	82 30       	cpi	r24, 0x02	; 2
     f1c:	21 f4       	brne	.+8      	; 0xf26 <__pack_f+0x40>
     f1e:	ee 24       	eor	r14, r14
     f20:	ff 24       	eor	r15, r15
     f22:	87 01       	movw	r16, r14
     f24:	05 c0       	rjmp	.+10     	; 0xf30 <__pack_f+0x4a>
     f26:	e1 14       	cp	r14, r1
     f28:	f1 04       	cpc	r15, r1
     f2a:	01 05       	cpc	r16, r1
     f2c:	11 05       	cpc	r17, r1
     f2e:	19 f4       	brne	.+6      	; 0xf36 <__pack_f+0x50>
     f30:	e0 e0       	ldi	r30, 0x00	; 0
     f32:	f0 e0       	ldi	r31, 0x00	; 0
     f34:	96 c0       	rjmp	.+300    	; 0x1062 <__pack_f+0x17c>
     f36:	62 81       	ldd	r22, Z+2	; 0x02
     f38:	73 81       	ldd	r23, Z+3	; 0x03
     f3a:	9f ef       	ldi	r25, 0xFF	; 255
     f3c:	62 38       	cpi	r22, 0x82	; 130
     f3e:	79 07       	cpc	r23, r25
     f40:	0c f0       	brlt	.+2      	; 0xf44 <__pack_f+0x5e>
     f42:	5b c0       	rjmp	.+182    	; 0xffa <__pack_f+0x114>
     f44:	22 e8       	ldi	r18, 0x82	; 130
     f46:	3f ef       	ldi	r19, 0xFF	; 255
     f48:	26 1b       	sub	r18, r22
     f4a:	37 0b       	sbc	r19, r23
     f4c:	2a 31       	cpi	r18, 0x1A	; 26
     f4e:	31 05       	cpc	r19, r1
     f50:	2c f0       	brlt	.+10     	; 0xf5c <__pack_f+0x76>
     f52:	20 e0       	ldi	r18, 0x00	; 0
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	40 e0       	ldi	r20, 0x00	; 0
     f58:	50 e0       	ldi	r21, 0x00	; 0
     f5a:	2a c0       	rjmp	.+84     	; 0xfb0 <__pack_f+0xca>
     f5c:	b8 01       	movw	r22, r16
     f5e:	a7 01       	movw	r20, r14
     f60:	02 2e       	mov	r0, r18
     f62:	04 c0       	rjmp	.+8      	; 0xf6c <__pack_f+0x86>
     f64:	76 95       	lsr	r23
     f66:	67 95       	ror	r22
     f68:	57 95       	ror	r21
     f6a:	47 95       	ror	r20
     f6c:	0a 94       	dec	r0
     f6e:	d2 f7       	brpl	.-12     	; 0xf64 <__pack_f+0x7e>
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	a0 e0       	ldi	r26, 0x00	; 0
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	04 c0       	rjmp	.+8      	; 0xf82 <__pack_f+0x9c>
     f7a:	88 0f       	add	r24, r24
     f7c:	99 1f       	adc	r25, r25
     f7e:	aa 1f       	adc	r26, r26
     f80:	bb 1f       	adc	r27, r27
     f82:	2a 95       	dec	r18
     f84:	d2 f7       	brpl	.-12     	; 0xf7a <__pack_f+0x94>
     f86:	01 97       	sbiw	r24, 0x01	; 1
     f88:	a1 09       	sbc	r26, r1
     f8a:	b1 09       	sbc	r27, r1
     f8c:	8e 21       	and	r24, r14
     f8e:	9f 21       	and	r25, r15
     f90:	a0 23       	and	r26, r16
     f92:	b1 23       	and	r27, r17
     f94:	00 97       	sbiw	r24, 0x00	; 0
     f96:	a1 05       	cpc	r26, r1
     f98:	b1 05       	cpc	r27, r1
     f9a:	21 f0       	breq	.+8      	; 0xfa4 <__pack_f+0xbe>
     f9c:	81 e0       	ldi	r24, 0x01	; 1
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	a0 e0       	ldi	r26, 0x00	; 0
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	9a 01       	movw	r18, r20
     fa6:	ab 01       	movw	r20, r22
     fa8:	28 2b       	or	r18, r24
     faa:	39 2b       	or	r19, r25
     fac:	4a 2b       	or	r20, r26
     fae:	5b 2b       	or	r21, r27
     fb0:	da 01       	movw	r26, r20
     fb2:	c9 01       	movw	r24, r18
     fb4:	8f 77       	andi	r24, 0x7F	; 127
     fb6:	90 70       	andi	r25, 0x00	; 0
     fb8:	a0 70       	andi	r26, 0x00	; 0
     fba:	b0 70       	andi	r27, 0x00	; 0
     fbc:	80 34       	cpi	r24, 0x40	; 64
     fbe:	91 05       	cpc	r25, r1
     fc0:	a1 05       	cpc	r26, r1
     fc2:	b1 05       	cpc	r27, r1
     fc4:	39 f4       	brne	.+14     	; 0xfd4 <__pack_f+0xee>
     fc6:	27 ff       	sbrs	r18, 7
     fc8:	09 c0       	rjmp	.+18     	; 0xfdc <__pack_f+0xf6>
     fca:	20 5c       	subi	r18, 0xC0	; 192
     fcc:	3f 4f       	sbci	r19, 0xFF	; 255
     fce:	4f 4f       	sbci	r20, 0xFF	; 255
     fd0:	5f 4f       	sbci	r21, 0xFF	; 255
     fd2:	04 c0       	rjmp	.+8      	; 0xfdc <__pack_f+0xf6>
     fd4:	21 5c       	subi	r18, 0xC1	; 193
     fd6:	3f 4f       	sbci	r19, 0xFF	; 255
     fd8:	4f 4f       	sbci	r20, 0xFF	; 255
     fda:	5f 4f       	sbci	r21, 0xFF	; 255
     fdc:	e0 e0       	ldi	r30, 0x00	; 0
     fde:	f0 e0       	ldi	r31, 0x00	; 0
     fe0:	20 30       	cpi	r18, 0x00	; 0
     fe2:	a0 e0       	ldi	r26, 0x00	; 0
     fe4:	3a 07       	cpc	r19, r26
     fe6:	a0 e0       	ldi	r26, 0x00	; 0
     fe8:	4a 07       	cpc	r20, r26
     fea:	a0 e4       	ldi	r26, 0x40	; 64
     fec:	5a 07       	cpc	r21, r26
     fee:	10 f0       	brcs	.+4      	; 0xff4 <__pack_f+0x10e>
     ff0:	e1 e0       	ldi	r30, 0x01	; 1
     ff2:	f0 e0       	ldi	r31, 0x00	; 0
     ff4:	79 01       	movw	r14, r18
     ff6:	8a 01       	movw	r16, r20
     ff8:	27 c0       	rjmp	.+78     	; 0x1048 <__pack_f+0x162>
     ffa:	60 38       	cpi	r22, 0x80	; 128
     ffc:	71 05       	cpc	r23, r1
     ffe:	64 f5       	brge	.+88     	; 0x1058 <__pack_f+0x172>
    1000:	fb 01       	movw	r30, r22
    1002:	e1 58       	subi	r30, 0x81	; 129
    1004:	ff 4f       	sbci	r31, 0xFF	; 255
    1006:	d8 01       	movw	r26, r16
    1008:	c7 01       	movw	r24, r14
    100a:	8f 77       	andi	r24, 0x7F	; 127
    100c:	90 70       	andi	r25, 0x00	; 0
    100e:	a0 70       	andi	r26, 0x00	; 0
    1010:	b0 70       	andi	r27, 0x00	; 0
    1012:	80 34       	cpi	r24, 0x40	; 64
    1014:	91 05       	cpc	r25, r1
    1016:	a1 05       	cpc	r26, r1
    1018:	b1 05       	cpc	r27, r1
    101a:	39 f4       	brne	.+14     	; 0x102a <__pack_f+0x144>
    101c:	e7 fe       	sbrs	r14, 7
    101e:	0d c0       	rjmp	.+26     	; 0x103a <__pack_f+0x154>
    1020:	80 e4       	ldi	r24, 0x40	; 64
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	a0 e0       	ldi	r26, 0x00	; 0
    1026:	b0 e0       	ldi	r27, 0x00	; 0
    1028:	04 c0       	rjmp	.+8      	; 0x1032 <__pack_f+0x14c>
    102a:	8f e3       	ldi	r24, 0x3F	; 63
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	a0 e0       	ldi	r26, 0x00	; 0
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e8 0e       	add	r14, r24
    1034:	f9 1e       	adc	r15, r25
    1036:	0a 1f       	adc	r16, r26
    1038:	1b 1f       	adc	r17, r27
    103a:	17 ff       	sbrs	r17, 7
    103c:	05 c0       	rjmp	.+10     	; 0x1048 <__pack_f+0x162>
    103e:	16 95       	lsr	r17
    1040:	07 95       	ror	r16
    1042:	f7 94       	ror	r15
    1044:	e7 94       	ror	r14
    1046:	31 96       	adiw	r30, 0x01	; 1
    1048:	87 e0       	ldi	r24, 0x07	; 7
    104a:	16 95       	lsr	r17
    104c:	07 95       	ror	r16
    104e:	f7 94       	ror	r15
    1050:	e7 94       	ror	r14
    1052:	8a 95       	dec	r24
    1054:	d1 f7       	brne	.-12     	; 0x104a <__pack_f+0x164>
    1056:	05 c0       	rjmp	.+10     	; 0x1062 <__pack_f+0x17c>
    1058:	ee 24       	eor	r14, r14
    105a:	ff 24       	eor	r15, r15
    105c:	87 01       	movw	r16, r14
    105e:	ef ef       	ldi	r30, 0xFF	; 255
    1060:	f0 e0       	ldi	r31, 0x00	; 0
    1062:	6e 2f       	mov	r22, r30
    1064:	67 95       	ror	r22
    1066:	66 27       	eor	r22, r22
    1068:	67 95       	ror	r22
    106a:	90 2f       	mov	r25, r16
    106c:	9f 77       	andi	r25, 0x7F	; 127
    106e:	d7 94       	ror	r13
    1070:	dd 24       	eor	r13, r13
    1072:	d7 94       	ror	r13
    1074:	8e 2f       	mov	r24, r30
    1076:	86 95       	lsr	r24
    1078:	49 2f       	mov	r20, r25
    107a:	46 2b       	or	r20, r22
    107c:	58 2f       	mov	r21, r24
    107e:	5d 29       	or	r21, r13
    1080:	b7 01       	movw	r22, r14
    1082:	ca 01       	movw	r24, r20
    1084:	1f 91       	pop	r17
    1086:	0f 91       	pop	r16
    1088:	ff 90       	pop	r15
    108a:	ef 90       	pop	r14
    108c:	df 90       	pop	r13
    108e:	08 95       	ret

00001090 <__unpack_f>:
    1090:	fc 01       	movw	r30, r24
    1092:	db 01       	movw	r26, r22
    1094:	40 81       	ld	r20, Z
    1096:	51 81       	ldd	r21, Z+1	; 0x01
    1098:	22 81       	ldd	r18, Z+2	; 0x02
    109a:	62 2f       	mov	r22, r18
    109c:	6f 77       	andi	r22, 0x7F	; 127
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	22 1f       	adc	r18, r18
    10a2:	22 27       	eor	r18, r18
    10a4:	22 1f       	adc	r18, r18
    10a6:	93 81       	ldd	r25, Z+3	; 0x03
    10a8:	89 2f       	mov	r24, r25
    10aa:	88 0f       	add	r24, r24
    10ac:	82 2b       	or	r24, r18
    10ae:	28 2f       	mov	r18, r24
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	99 1f       	adc	r25, r25
    10b4:	99 27       	eor	r25, r25
    10b6:	99 1f       	adc	r25, r25
    10b8:	11 96       	adiw	r26, 0x01	; 1
    10ba:	9c 93       	st	X, r25
    10bc:	11 97       	sbiw	r26, 0x01	; 1
    10be:	21 15       	cp	r18, r1
    10c0:	31 05       	cpc	r19, r1
    10c2:	a9 f5       	brne	.+106    	; 0x112e <__unpack_f+0x9e>
    10c4:	41 15       	cp	r20, r1
    10c6:	51 05       	cpc	r21, r1
    10c8:	61 05       	cpc	r22, r1
    10ca:	71 05       	cpc	r23, r1
    10cc:	11 f4       	brne	.+4      	; 0x10d2 <__unpack_f+0x42>
    10ce:	82 e0       	ldi	r24, 0x02	; 2
    10d0:	37 c0       	rjmp	.+110    	; 0x1140 <__unpack_f+0xb0>
    10d2:	82 e8       	ldi	r24, 0x82	; 130
    10d4:	9f ef       	ldi	r25, 0xFF	; 255
    10d6:	13 96       	adiw	r26, 0x03	; 3
    10d8:	9c 93       	st	X, r25
    10da:	8e 93       	st	-X, r24
    10dc:	12 97       	sbiw	r26, 0x02	; 2
    10de:	9a 01       	movw	r18, r20
    10e0:	ab 01       	movw	r20, r22
    10e2:	67 e0       	ldi	r22, 0x07	; 7
    10e4:	22 0f       	add	r18, r18
    10e6:	33 1f       	adc	r19, r19
    10e8:	44 1f       	adc	r20, r20
    10ea:	55 1f       	adc	r21, r21
    10ec:	6a 95       	dec	r22
    10ee:	d1 f7       	brne	.-12     	; 0x10e4 <__unpack_f+0x54>
    10f0:	83 e0       	ldi	r24, 0x03	; 3
    10f2:	8c 93       	st	X, r24
    10f4:	0d c0       	rjmp	.+26     	; 0x1110 <__unpack_f+0x80>
    10f6:	22 0f       	add	r18, r18
    10f8:	33 1f       	adc	r19, r19
    10fa:	44 1f       	adc	r20, r20
    10fc:	55 1f       	adc	r21, r21
    10fe:	12 96       	adiw	r26, 0x02	; 2
    1100:	8d 91       	ld	r24, X+
    1102:	9c 91       	ld	r25, X
    1104:	13 97       	sbiw	r26, 0x03	; 3
    1106:	01 97       	sbiw	r24, 0x01	; 1
    1108:	13 96       	adiw	r26, 0x03	; 3
    110a:	9c 93       	st	X, r25
    110c:	8e 93       	st	-X, r24
    110e:	12 97       	sbiw	r26, 0x02	; 2
    1110:	20 30       	cpi	r18, 0x00	; 0
    1112:	80 e0       	ldi	r24, 0x00	; 0
    1114:	38 07       	cpc	r19, r24
    1116:	80 e0       	ldi	r24, 0x00	; 0
    1118:	48 07       	cpc	r20, r24
    111a:	80 e4       	ldi	r24, 0x40	; 64
    111c:	58 07       	cpc	r21, r24
    111e:	58 f3       	brcs	.-42     	; 0x10f6 <__unpack_f+0x66>
    1120:	14 96       	adiw	r26, 0x04	; 4
    1122:	2d 93       	st	X+, r18
    1124:	3d 93       	st	X+, r19
    1126:	4d 93       	st	X+, r20
    1128:	5c 93       	st	X, r21
    112a:	17 97       	sbiw	r26, 0x07	; 7
    112c:	08 95       	ret
    112e:	2f 3f       	cpi	r18, 0xFF	; 255
    1130:	31 05       	cpc	r19, r1
    1132:	79 f4       	brne	.+30     	; 0x1152 <__unpack_f+0xc2>
    1134:	41 15       	cp	r20, r1
    1136:	51 05       	cpc	r21, r1
    1138:	61 05       	cpc	r22, r1
    113a:	71 05       	cpc	r23, r1
    113c:	19 f4       	brne	.+6      	; 0x1144 <__unpack_f+0xb4>
    113e:	84 e0       	ldi	r24, 0x04	; 4
    1140:	8c 93       	st	X, r24
    1142:	08 95       	ret
    1144:	64 ff       	sbrs	r22, 4
    1146:	03 c0       	rjmp	.+6      	; 0x114e <__unpack_f+0xbe>
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	8c 93       	st	X, r24
    114c:	12 c0       	rjmp	.+36     	; 0x1172 <__unpack_f+0xe2>
    114e:	1c 92       	st	X, r1
    1150:	10 c0       	rjmp	.+32     	; 0x1172 <__unpack_f+0xe2>
    1152:	2f 57       	subi	r18, 0x7F	; 127
    1154:	30 40       	sbci	r19, 0x00	; 0
    1156:	13 96       	adiw	r26, 0x03	; 3
    1158:	3c 93       	st	X, r19
    115a:	2e 93       	st	-X, r18
    115c:	12 97       	sbiw	r26, 0x02	; 2
    115e:	83 e0       	ldi	r24, 0x03	; 3
    1160:	8c 93       	st	X, r24
    1162:	87 e0       	ldi	r24, 0x07	; 7
    1164:	44 0f       	add	r20, r20
    1166:	55 1f       	adc	r21, r21
    1168:	66 1f       	adc	r22, r22
    116a:	77 1f       	adc	r23, r23
    116c:	8a 95       	dec	r24
    116e:	d1 f7       	brne	.-12     	; 0x1164 <__unpack_f+0xd4>
    1170:	70 64       	ori	r23, 0x40	; 64
    1172:	14 96       	adiw	r26, 0x04	; 4
    1174:	4d 93       	st	X+, r20
    1176:	5d 93       	st	X+, r21
    1178:	6d 93       	st	X+, r22
    117a:	7c 93       	st	X, r23
    117c:	17 97       	sbiw	r26, 0x07	; 7
    117e:	08 95       	ret

00001180 <__fpcmp_parts_f>:
    1180:	1f 93       	push	r17
    1182:	dc 01       	movw	r26, r24
    1184:	fb 01       	movw	r30, r22
    1186:	9c 91       	ld	r25, X
    1188:	92 30       	cpi	r25, 0x02	; 2
    118a:	08 f4       	brcc	.+2      	; 0x118e <__fpcmp_parts_f+0xe>
    118c:	47 c0       	rjmp	.+142    	; 0x121c <__fpcmp_parts_f+0x9c>
    118e:	80 81       	ld	r24, Z
    1190:	82 30       	cpi	r24, 0x02	; 2
    1192:	08 f4       	brcc	.+2      	; 0x1196 <__fpcmp_parts_f+0x16>
    1194:	43 c0       	rjmp	.+134    	; 0x121c <__fpcmp_parts_f+0x9c>
    1196:	94 30       	cpi	r25, 0x04	; 4
    1198:	51 f4       	brne	.+20     	; 0x11ae <__fpcmp_parts_f+0x2e>
    119a:	11 96       	adiw	r26, 0x01	; 1
    119c:	1c 91       	ld	r17, X
    119e:	84 30       	cpi	r24, 0x04	; 4
    11a0:	99 f5       	brne	.+102    	; 0x1208 <__fpcmp_parts_f+0x88>
    11a2:	81 81       	ldd	r24, Z+1	; 0x01
    11a4:	68 2f       	mov	r22, r24
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	61 1b       	sub	r22, r17
    11aa:	71 09       	sbc	r23, r1
    11ac:	3f c0       	rjmp	.+126    	; 0x122c <__fpcmp_parts_f+0xac>
    11ae:	84 30       	cpi	r24, 0x04	; 4
    11b0:	21 f0       	breq	.+8      	; 0x11ba <__fpcmp_parts_f+0x3a>
    11b2:	92 30       	cpi	r25, 0x02	; 2
    11b4:	31 f4       	brne	.+12     	; 0x11c2 <__fpcmp_parts_f+0x42>
    11b6:	82 30       	cpi	r24, 0x02	; 2
    11b8:	b9 f1       	breq	.+110    	; 0x1228 <__fpcmp_parts_f+0xa8>
    11ba:	81 81       	ldd	r24, Z+1	; 0x01
    11bc:	88 23       	and	r24, r24
    11be:	89 f1       	breq	.+98     	; 0x1222 <__fpcmp_parts_f+0xa2>
    11c0:	2d c0       	rjmp	.+90     	; 0x121c <__fpcmp_parts_f+0x9c>
    11c2:	11 96       	adiw	r26, 0x01	; 1
    11c4:	1c 91       	ld	r17, X
    11c6:	11 97       	sbiw	r26, 0x01	; 1
    11c8:	82 30       	cpi	r24, 0x02	; 2
    11ca:	f1 f0       	breq	.+60     	; 0x1208 <__fpcmp_parts_f+0x88>
    11cc:	81 81       	ldd	r24, Z+1	; 0x01
    11ce:	18 17       	cp	r17, r24
    11d0:	d9 f4       	brne	.+54     	; 0x1208 <__fpcmp_parts_f+0x88>
    11d2:	12 96       	adiw	r26, 0x02	; 2
    11d4:	2d 91       	ld	r18, X+
    11d6:	3c 91       	ld	r19, X
    11d8:	13 97       	sbiw	r26, 0x03	; 3
    11da:	82 81       	ldd	r24, Z+2	; 0x02
    11dc:	93 81       	ldd	r25, Z+3	; 0x03
    11de:	82 17       	cp	r24, r18
    11e0:	93 07       	cpc	r25, r19
    11e2:	94 f0       	brlt	.+36     	; 0x1208 <__fpcmp_parts_f+0x88>
    11e4:	28 17       	cp	r18, r24
    11e6:	39 07       	cpc	r19, r25
    11e8:	bc f0       	brlt	.+46     	; 0x1218 <__fpcmp_parts_f+0x98>
    11ea:	14 96       	adiw	r26, 0x04	; 4
    11ec:	8d 91       	ld	r24, X+
    11ee:	9d 91       	ld	r25, X+
    11f0:	0d 90       	ld	r0, X+
    11f2:	bc 91       	ld	r27, X
    11f4:	a0 2d       	mov	r26, r0
    11f6:	24 81       	ldd	r18, Z+4	; 0x04
    11f8:	35 81       	ldd	r19, Z+5	; 0x05
    11fa:	46 81       	ldd	r20, Z+6	; 0x06
    11fc:	57 81       	ldd	r21, Z+7	; 0x07
    11fe:	28 17       	cp	r18, r24
    1200:	39 07       	cpc	r19, r25
    1202:	4a 07       	cpc	r20, r26
    1204:	5b 07       	cpc	r21, r27
    1206:	18 f4       	brcc	.+6      	; 0x120e <__fpcmp_parts_f+0x8e>
    1208:	11 23       	and	r17, r17
    120a:	41 f0       	breq	.+16     	; 0x121c <__fpcmp_parts_f+0x9c>
    120c:	0a c0       	rjmp	.+20     	; 0x1222 <__fpcmp_parts_f+0xa2>
    120e:	82 17       	cp	r24, r18
    1210:	93 07       	cpc	r25, r19
    1212:	a4 07       	cpc	r26, r20
    1214:	b5 07       	cpc	r27, r21
    1216:	40 f4       	brcc	.+16     	; 0x1228 <__fpcmp_parts_f+0xa8>
    1218:	11 23       	and	r17, r17
    121a:	19 f0       	breq	.+6      	; 0x1222 <__fpcmp_parts_f+0xa2>
    121c:	61 e0       	ldi	r22, 0x01	; 1
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	05 c0       	rjmp	.+10     	; 0x122c <__fpcmp_parts_f+0xac>
    1222:	6f ef       	ldi	r22, 0xFF	; 255
    1224:	7f ef       	ldi	r23, 0xFF	; 255
    1226:	02 c0       	rjmp	.+4      	; 0x122c <__fpcmp_parts_f+0xac>
    1228:	60 e0       	ldi	r22, 0x00	; 0
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	cb 01       	movw	r24, r22
    122e:	1f 91       	pop	r17
    1230:	08 95       	ret

00001232 <__prologue_saves__>:
    1232:	2f 92       	push	r2
    1234:	3f 92       	push	r3
    1236:	4f 92       	push	r4
    1238:	5f 92       	push	r5
    123a:	6f 92       	push	r6
    123c:	7f 92       	push	r7
    123e:	8f 92       	push	r8
    1240:	9f 92       	push	r9
    1242:	af 92       	push	r10
    1244:	bf 92       	push	r11
    1246:	cf 92       	push	r12
    1248:	df 92       	push	r13
    124a:	ef 92       	push	r14
    124c:	ff 92       	push	r15
    124e:	0f 93       	push	r16
    1250:	1f 93       	push	r17
    1252:	cf 93       	push	r28
    1254:	df 93       	push	r29
    1256:	cd b7       	in	r28, 0x3d	; 61
    1258:	de b7       	in	r29, 0x3e	; 62
    125a:	ca 1b       	sub	r28, r26
    125c:	db 0b       	sbc	r29, r27
    125e:	0f b6       	in	r0, 0x3f	; 63
    1260:	f8 94       	cli
    1262:	de bf       	out	0x3e, r29	; 62
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	cd bf       	out	0x3d, r28	; 61
    1268:	09 94       	ijmp

0000126a <__epilogue_restores__>:
    126a:	2a 88       	ldd	r2, Y+18	; 0x12
    126c:	39 88       	ldd	r3, Y+17	; 0x11
    126e:	48 88       	ldd	r4, Y+16	; 0x10
    1270:	5f 84       	ldd	r5, Y+15	; 0x0f
    1272:	6e 84       	ldd	r6, Y+14	; 0x0e
    1274:	7d 84       	ldd	r7, Y+13	; 0x0d
    1276:	8c 84       	ldd	r8, Y+12	; 0x0c
    1278:	9b 84       	ldd	r9, Y+11	; 0x0b
    127a:	aa 84       	ldd	r10, Y+10	; 0x0a
    127c:	b9 84       	ldd	r11, Y+9	; 0x09
    127e:	c8 84       	ldd	r12, Y+8	; 0x08
    1280:	df 80       	ldd	r13, Y+7	; 0x07
    1282:	ee 80       	ldd	r14, Y+6	; 0x06
    1284:	fd 80       	ldd	r15, Y+5	; 0x05
    1286:	0c 81       	ldd	r16, Y+4	; 0x04
    1288:	1b 81       	ldd	r17, Y+3	; 0x03
    128a:	aa 81       	ldd	r26, Y+2	; 0x02
    128c:	b9 81       	ldd	r27, Y+1	; 0x01
    128e:	ce 0f       	add	r28, r30
    1290:	d1 1d       	adc	r29, r1
    1292:	0f b6       	in	r0, 0x3f	; 63
    1294:	f8 94       	cli
    1296:	de bf       	out	0x3e, r29	; 62
    1298:	0f be       	out	0x3f, r0	; 63
    129a:	cd bf       	out	0x3d, r28	; 61
    129c:	ed 01       	movw	r28, r26
    129e:	08 95       	ret

000012a0 <_exit>:
    12a0:	f8 94       	cli

000012a2 <__stop_program>:
    12a2:	ff cf       	rjmp	.-2      	; 0x12a2 <__stop_program>
